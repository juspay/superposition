[package]
name = "frontend"
version = "0.14.0"
edition = "2021"

# [package.metadata.wasm-pack.profile.dev]
# # Should `wasm-opt` be used to further optimize the wasm binary generated after
# # the Rust compiler has finished? Using `wasm-opt` can often further decrease
# # binary size or do clever tricks that haven't made their way into LLVM yet.
# #
# # Configuration is set to `false` by default for the dev profile, but it can
# # be set to an array of strings which are explicit arguments to pass to
# # `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# # would execute very expensive optimizations passes
# wasm-opt = ['-Os']
#
# [package.metadata.wasm-pack.profile.release]
# # Should `wasm-opt` be used to further optimize the wasm binary generated after
# # the Rust compiler has finished? Using `wasm-opt` can often further decrease
# # binary size or do clever tricks that haven't made their way into LLVM yet.
# #
# # Configuration is set to `false` by default for the dev profile, but it can
# # be set to an array of strings which are explicit arguments to pass to
# # `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# # would execute very expensive optimizations passes
# wasm-opt = ['-Os']

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
dotenv = { workspace = true }
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4.5.0", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
cfg-if = "1"
leptos = { workspace = true }
leptos_meta = { workspace = true }
leptos_actix = { workspace = true, optional = true }
leptos_router = { workspace = true }
wasm-bindgen = "=0.2.89"
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
web-sys = { version = "0.3.64", features = ["Event", "Worker", "Blob", "Window"] }
futures = "0.3"
derive_more = { workspace = true }
anyhow = { workspace = true }
chrono = {workspace = true }
strum_macros = { workspace = true }
strum = { workspace = true }
js-sys = "0.3.65"
url = "2.5.0"
once_cell = { workspace = true }
leptos-use = { workspace = true }
monaco = { git = "https://github.com/datron/rust-monaco.git" }

[features]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
  "dep:actix-files",
  "dep:actix-web",
  "dep:leptos_actix",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
]

[lints]
workspace = true
