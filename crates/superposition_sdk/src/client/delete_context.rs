// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteContext`](crate::operation::delete_context::builders::DeleteContextFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`workspace_id(impl Into<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::workspace_id) / [`set_workspace_id(Option<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::set_workspace_id):<br>required: **true**<br>(undocumented)<br>
    ///   - [`org_id(impl Into<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::org_id) / [`set_org_id(Option<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::set_org_id):<br>required: **true**<br>(undocumented)<br>
    ///   - [`id(impl Into<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::set_id):<br>required: **true**<br>(undocumented)<br>
    ///   - [`config_tags(impl Into<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::config_tags) / [`set_config_tags(Option<String>)`](crate::operation::delete_context::builders::DeleteContextFluentBuilder::set_config_tags):<br>required: **false**<br>(undocumented)<br>
                            /// - On success, responds with [`DeleteContextOutput`](crate::operation::delete_context::DeleteContextOutput)
                            /// - On failure, responds with [`SdkError<DeleteContextError>`](crate::operation::delete_context::DeleteContextError)
    pub fn delete_context(&self) -> crate::operation::delete_context::builders::DeleteContextFluentBuilder {
                                crate::operation::delete_context::builders::DeleteContextFluentBuilder::new(self.handle.clone())
                            }
}

