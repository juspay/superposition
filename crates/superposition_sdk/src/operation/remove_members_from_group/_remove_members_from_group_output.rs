// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Standard response structure for an experiment group.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RemoveMembersFromGroupOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub id: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub context_hash: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub name: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub description: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub change_reason: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub context: ::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>,
    #[allow(missing_docs)] // documentation missing in model
    pub traffic_percentage: i32,
    #[allow(missing_docs)] // documentation missing in model
    pub member_experiment_ids: ::std::vec::Vec::<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub created_at: ::aws_smithy_types::DateTime,
    #[allow(missing_docs)] // documentation missing in model
    pub created_by: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub last_modified_at: ::aws_smithy_types::DateTime,
    #[allow(missing_docs)] // documentation missing in model
    pub last_modified_by: ::std::string::String,
}
impl  RemoveMembersFromGroupOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn id(&self) -> &str {
        use std::ops::Deref; self.id.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn context_hash(&self) -> &str {
        use std::ops::Deref; self.context_hash.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn name(&self) -> &str {
        use std::ops::Deref; self.name.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn description(&self) -> &str {
        use std::ops::Deref; self.description.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn change_reason(&self) -> &str {
        use std::ops::Deref; self.change_reason.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn context(&self) -> &::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document> {
        &self.context
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn traffic_percentage(&self) -> i32 {
        self.traffic_percentage
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn member_experiment_ids(&self) -> &[::std::string::String] {
        use std::ops::Deref; self.member_experiment_ids.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn created_by(&self) -> &str {
        use std::ops::Deref; self.created_by.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified_at(&self) -> &::aws_smithy_types::DateTime {
        &self.last_modified_at
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified_by(&self) -> &str {
        use std::ops::Deref; self.last_modified_by.deref()
    }
}
impl RemoveMembersFromGroupOutput {
    /// Creates a new builder-style object to manufacture [`RemoveMembersFromGroupOutput`](crate::operation::remove_members_from_group::RemoveMembersFromGroupOutput).
    pub fn builder() -> crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder {
        crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::default()
    }
}

/// A builder for [`RemoveMembersFromGroupOutput`](crate::operation::remove_members_from_group::RemoveMembersFromGroupOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RemoveMembersFromGroupOutputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) context_hash: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) change_reason: ::std::option::Option<::std::string::String>,
    pub(crate) context: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>,
    pub(crate) traffic_percentage: ::std::option::Option<i32>,
    pub(crate) member_experiment_ids: ::std::option::Option<::std::vec::Vec::<::std::string::String>>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) created_by: ::std::option::Option<::std::string::String>,
    pub(crate) last_modified_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_by: ::std::option::Option<::std::string::String>,
}
impl RemoveMembersFromGroupOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn context_hash(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.context_hash = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_context_hash(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.context_hash = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_context_hash(&self) -> &::std::option::Option<::std::string::String> {
        &self.context_hash
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn change_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.change_reason = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_change_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.change_reason = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_change_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.change_reason
    }
    /// Adds a key-value pair to `context`.
    ///
    /// To override the contents of this collection use [`set_context`](Self::set_context).
    ///
    pub fn context(mut self, k: impl ::std::convert::Into<::std::string::String>, v: ::aws_smithy_types::Document) -> Self {
        let mut hash_map = self.context.unwrap_or_default();
                        hash_map.insert(k.into(), v);
                        self.context = ::std::option::Option::Some(hash_map);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_context(mut self, input: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>) -> Self {
        self.context = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_context(&self) -> &::std::option::Option<::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>> {
        &self.context
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn traffic_percentage(mut self, input: i32) -> Self {
        self.traffic_percentage = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_traffic_percentage(mut self, input: ::std::option::Option<i32>) -> Self {
        self.traffic_percentage = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_traffic_percentage(&self) -> &::std::option::Option<i32> {
        &self.traffic_percentage
    }
    /// Appends an item to `member_experiment_ids`.
    ///
    /// To override the contents of this collection use [`set_member_experiment_ids`](Self::set_member_experiment_ids).
    ///
    pub fn member_experiment_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.member_experiment_ids.unwrap_or_default();
                        v.push(input.into());
                        self.member_experiment_ids = ::std::option::Option::Some(v);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_member_experiment_ids(mut self, input: ::std::option::Option<::std::vec::Vec::<::std::string::String>>) -> Self {
        self.member_experiment_ids = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_member_experiment_ids(&self) -> &::std::option::Option<::std::vec::Vec::<::std::string::String>> {
        &self.member_experiment_ids
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn created_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.created_by = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_created_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.created_by = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_created_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.created_by
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn last_modified_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_at = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_last_modified_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_at = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_last_modified_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_at
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn last_modified_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_modified_by = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_last_modified_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_modified_by = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_last_modified_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_modified_by
    }
    /// Consumes the builder and constructs a [`RemoveMembersFromGroupOutput`](crate::operation::remove_members_from_group::RemoveMembersFromGroupOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::id)
    /// - [`context_hash`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::context_hash)
    /// - [`name`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::name)
    /// - [`description`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::description)
    /// - [`change_reason`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::change_reason)
    /// - [`context`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::context)
    /// - [`traffic_percentage`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::traffic_percentage)
    /// - [`member_experiment_ids`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::member_experiment_ids)
    /// - [`created_at`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::created_at)
    /// - [`created_by`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::created_by)
    /// - [`last_modified_at`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::last_modified_at)
    /// - [`last_modified_by`](crate::operation::remove_members_from_group::builders::RemoveMembersFromGroupOutputBuilder::last_modified_by)
    pub fn build(self) -> ::std::result::Result<crate::operation::remove_members_from_group::RemoveMembersFromGroupOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::remove_members_from_group::RemoveMembersFromGroupOutput {
                id: self.id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("id", "id was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                context_hash: self.context_hash
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("context_hash", "context_hash was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                name: self.name
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("name", "name was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                description: self.description
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("description", "description was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                change_reason: self.change_reason
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("change_reason", "change_reason was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                context: self.context
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("context", "context was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                traffic_percentage: self.traffic_percentage
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("traffic_percentage", "traffic_percentage was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                member_experiment_ids: self.member_experiment_ids
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("member_experiment_ids", "member_experiment_ids was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                created_at: self.created_at
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("created_at", "created_at was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                created_by: self.created_by
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("created_by", "created_by was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                last_modified_at: self.last_modified_at
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("last_modified_at", "last_modified_at was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
                last_modified_by: self.last_modified_by
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("last_modified_by", "last_modified_by was not specified but it is required when building RemoveMembersFromGroupOutput")
                    )?
                ,
            }
        )
    }
}

