// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BulkOperationInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_id: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub org_id: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub config_tags: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub bulk_operation: ::std::option::Option<crate::types::BulkOperationReq>,
}
impl  BulkOperationInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_id(&self) -> ::std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn org_id(&self) -> ::std::option::Option<&str> {
        self.org_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn config_tags(&self) -> ::std::option::Option<&str> {
        self.config_tags.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn bulk_operation(&self) -> ::std::option::Option<&crate::types::BulkOperationReq> {
        self.bulk_operation.as_ref()
    }
}
impl BulkOperationInput {
    /// Creates a new builder-style object to manufacture [`BulkOperationInput`](crate::operation::bulk_operation::BulkOperationInput).
    pub fn builder() -> crate::operation::bulk_operation::builders::BulkOperationInputBuilder {
        crate::operation::bulk_operation::builders::BulkOperationInputBuilder::default()
    }
}

/// A builder for [`BulkOperationInput`](crate::operation::bulk_operation::BulkOperationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BulkOperationInputBuilder {
    pub(crate) workspace_id: ::std::option::Option<::std::string::String>,
    pub(crate) org_id: ::std::option::Option<::std::string::String>,
    pub(crate) config_tags: ::std::option::Option<::std::string::String>,
    pub(crate) bulk_operation: ::std::option::Option<crate::types::BulkOperationReq>,
}
impl BulkOperationInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_id
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn org_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.org_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_org_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.org_id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_org_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.org_id
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn config_tags(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.config_tags = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_config_tags(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.config_tags = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_config_tags(&self) -> &::std::option::Option<::std::string::String> {
        &self.config_tags
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn bulk_operation(mut self, input: crate::types::BulkOperationReq) -> Self {
        self.bulk_operation = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_bulk_operation(mut self, input: ::std::option::Option<crate::types::BulkOperationReq>) -> Self {
        self.bulk_operation = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_bulk_operation(&self) -> &::std::option::Option<crate::types::BulkOperationReq> {
        &self.bulk_operation
    }
    /// Consumes the builder and constructs a [`BulkOperationInput`](crate::operation::bulk_operation::BulkOperationInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::bulk_operation::BulkOperationInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::bulk_operation::BulkOperationInput {
                workspace_id: self.workspace_id
                ,
                org_id: self.org_id
                ,
                config_tags: self.config_tags
                ,
                bulk_operation: self.bulk_operation
                ,
            }
        )
    }
}

