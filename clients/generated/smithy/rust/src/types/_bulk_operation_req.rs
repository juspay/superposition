// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BulkOperationReq  {
    #[allow(missing_docs)] // documentation missing in model
    pub operations: ::std::option::Option<::std::vec::Vec::<crate::types::ContextAction>>,
}
impl  BulkOperationReq  {
    #[allow(missing_docs)] // documentation missing in model
    /// 
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.operations.is_none()`.
    pub fn operations(&self) -> &[crate::types::ContextAction] {
        self.operations.as_deref()
        .unwrap_or_default()
    }
}
impl BulkOperationReq {
    /// Creates a new builder-style object to manufacture [`BulkOperationReq`](crate::types::BulkOperationReq).
    pub fn builder() -> crate::types::builders::BulkOperationReqBuilder {
        crate::types::builders::BulkOperationReqBuilder::default()
    }
}

/// A builder for [`BulkOperationReq`](crate::types::BulkOperationReq).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BulkOperationReqBuilder {
    pub(crate) operations: ::std::option::Option<::std::vec::Vec::<crate::types::ContextAction>>,
}
impl BulkOperationReqBuilder {
    /// Appends an item to `operations`.
    ///
    /// To override the contents of this collection use [`set_operations`](Self::set_operations).
    ///
    pub fn operations(mut self, input: crate::types::ContextAction) -> Self {
        let mut v = self.operations.unwrap_or_default();
                        v.push(input);
                        self.operations = ::std::option::Option::Some(v);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_operations(mut self, input: ::std::option::Option<::std::vec::Vec::<crate::types::ContextAction>>) -> Self {
        self.operations = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_operations(&self) -> &::std::option::Option<::std::vec::Vec::<crate::types::ContextAction>> {
        &self.operations
    }
    /// Consumes the builder and constructs a [`BulkOperationReq`](crate::types::BulkOperationReq).
    pub fn build(self) -> crate::types::BulkOperationReq {
        crate::types::BulkOperationReq {
            operations: self.operations
            ,
        }
    }
}

