// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Bucket  {
    #[allow(missing_docs)] // documentation missing in model
    pub experiment_id: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub variant: ::std::option::Option<::std::string::String>,
}
impl  Bucket  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn experiment_id(&self) -> ::std::option::Option<&str> {
        self.experiment_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn variant(&self) -> ::std::option::Option<&str> {
        self.variant.as_deref()
    }
}
impl Bucket {
    /// Creates a new builder-style object to manufacture [`Bucket`](crate::types::Bucket).
    pub fn builder() -> crate::types::builders::BucketBuilder {
        crate::types::builders::BucketBuilder::default()
    }
}

/// A builder for [`Bucket`](crate::types::Bucket).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BucketBuilder {
    pub(crate) experiment_id: ::std::option::Option<::std::string::String>,
    pub(crate) variant: ::std::option::Option<::std::string::String>,
}
impl BucketBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn experiment_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.experiment_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_experiment_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.experiment_id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_experiment_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.experiment_id
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn variant(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.variant = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_variant(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.variant = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_variant(&self) -> &::std::option::Option<::std::string::String> {
        &self.variant
    }
    /// Consumes the builder and constructs a [`Bucket`](crate::types::Bucket).
    pub fn build(self) -> crate::types::Bucket {
        crate::types::Bucket {
            experiment_id: self.experiment_id
            ,
            variant: self.variant
            ,
        }
    }
}

