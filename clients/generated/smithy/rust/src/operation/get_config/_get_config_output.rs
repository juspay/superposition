// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetConfigOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub contexts: ::std::option::Option<::std::vec::Vec::<crate::types::ContextPartial>>,
    #[allow(missing_docs)] // documentation missing in model
    pub overrides: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>>,
    #[allow(missing_docs)] // documentation missing in model
    pub default_configs: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>,
    #[allow(missing_docs)] // documentation missing in model
    pub version: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
    #[allow(missing_docs)] // documentation missing in model
    pub audit_id: ::std::option::Option<::std::string::String>,
}
impl  GetConfigOutput  {
    #[allow(missing_docs)] // documentation missing in model
    /// 
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.contexts.is_none()`.
    pub fn contexts(&self) -> &[crate::types::ContextPartial] {
        self.contexts.as_deref()
        .unwrap_or_default()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn overrides(&self) -> ::std::option::Option<&::std::collections::HashMap::<::std::string::String, ::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>> {
        self.overrides.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn default_configs(&self) -> ::std::option::Option<&::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>> {
        self.default_configs.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn version(&self) -> ::std::option::Option<&str> {
        self.version.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn audit_id(&self) -> ::std::option::Option<&str> {
        self.audit_id.as_deref()
    }
}
impl GetConfigOutput {
    /// Creates a new builder-style object to manufacture [`GetConfigOutput`](crate::operation::get_config::GetConfigOutput).
    pub fn builder() -> crate::operation::get_config::builders::GetConfigOutputBuilder {
        crate::operation::get_config::builders::GetConfigOutputBuilder::default()
    }
}

/// A builder for [`GetConfigOutput`](crate::operation::get_config::GetConfigOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetConfigOutputBuilder {
    pub(crate) contexts: ::std::option::Option<::std::vec::Vec::<crate::types::ContextPartial>>,
    pub(crate) overrides: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>>,
    pub(crate) default_configs: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>,
    pub(crate) version: ::std::option::Option<::std::string::String>,
    pub(crate) last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) audit_id: ::std::option::Option<::std::string::String>,
}
impl GetConfigOutputBuilder {
    /// Appends an item to `contexts`.
    ///
    /// To override the contents of this collection use [`set_contexts`](Self::set_contexts).
    ///
    pub fn contexts(mut self, input: crate::types::ContextPartial) -> Self {
        let mut v = self.contexts.unwrap_or_default();
                        v.push(input);
                        self.contexts = ::std::option::Option::Some(v);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_contexts(mut self, input: ::std::option::Option<::std::vec::Vec::<crate::types::ContextPartial>>) -> Self {
        self.contexts = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_contexts(&self) -> &::std::option::Option<::std::vec::Vec::<crate::types::ContextPartial>> {
        &self.contexts
    }
    /// Adds a key-value pair to `overrides`.
    ///
    /// To override the contents of this collection use [`set_overrides`](Self::set_overrides).
    ///
    pub fn overrides(mut self, k: impl ::std::convert::Into<::std::string::String>, v: ::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>) -> Self {
        let mut hash_map = self.overrides.unwrap_or_default();
                        hash_map.insert(k.into(), v);
                        self.overrides = ::std::option::Option::Some(hash_map);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_overrides(mut self, input: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>>) -> Self {
        self.overrides = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_overrides(&self) -> &::std::option::Option<::std::collections::HashMap::<::std::string::String, ::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>> {
        &self.overrides
    }
    /// Adds a key-value pair to `default_configs`.
    ///
    /// To override the contents of this collection use [`set_default_configs`](Self::set_default_configs).
    ///
    pub fn default_configs(mut self, k: impl ::std::convert::Into<::std::string::String>, v: ::aws_smithy_types::Document) -> Self {
        let mut hash_map = self.default_configs.unwrap_or_default();
                        hash_map.insert(k.into(), v);
                        self.default_configs = ::std::option::Option::Some(hash_map);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_default_configs(mut self, input: ::std::option::Option<::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>>) -> Self {
        self.default_configs = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_default_configs(&self) -> &::std::option::Option<::std::collections::HashMap::<::std::string::String, ::aws_smithy_types::Document>> {
        &self.default_configs
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_last_modified(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_last_modified(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn audit_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.audit_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_audit_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.audit_id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_audit_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.audit_id
    }
    /// Consumes the builder and constructs a [`GetConfigOutput`](crate::operation::get_config::GetConfigOutput).
    pub fn build(self) -> crate::operation::get_config::GetConfigOutput {
        crate::operation::get_config::GetConfigOutput {
            contexts: self.contexts
            ,
            overrides: self.overrides
            ,
            default_configs: self.default_configs
            ,
            version: self.version
            ,
            last_modified: self.last_modified
            ,
            audit_id: self.audit_id
            ,
        }
    }
}

