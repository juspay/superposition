// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateWorkspaceInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub org_id: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_admin_email: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_name: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_status: ::std::option::Option<crate::types::WorkspaceStatus>,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_strict_mode: ::std::option::Option<bool>,
    #[allow(missing_docs)] // documentation missing in model
    pub metrics: ::std::option::Option<::aws_smithy_types::Document>,
}
impl  CreateWorkspaceInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn org_id(&self) -> ::std::option::Option<&str> {
        self.org_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_admin_email(&self) -> ::std::option::Option<&str> {
        self.workspace_admin_email.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_name(&self) -> ::std::option::Option<&str> {
        self.workspace_name.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_status(&self) -> ::std::option::Option<&crate::types::WorkspaceStatus> {
        self.workspace_status.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_strict_mode(&self) -> ::std::option::Option<bool> {
        self.workspace_strict_mode
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn metrics(&self) -> ::std::option::Option<&::aws_smithy_types::Document> {
        self.metrics.as_ref()
    }
}
impl CreateWorkspaceInput {
    /// Creates a new builder-style object to manufacture [`CreateWorkspaceInput`](crate::operation::create_workspace::CreateWorkspaceInput).
    pub fn builder() -> crate::operation::create_workspace::builders::CreateWorkspaceInputBuilder {
        crate::operation::create_workspace::builders::CreateWorkspaceInputBuilder::default()
    }
}

/// A builder for [`CreateWorkspaceInput`](crate::operation::create_workspace::CreateWorkspaceInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateWorkspaceInputBuilder {
    pub(crate) org_id: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_admin_email: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_name: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_status: ::std::option::Option<crate::types::WorkspaceStatus>,
    pub(crate) workspace_strict_mode: ::std::option::Option<bool>,
    pub(crate) metrics: ::std::option::Option<::aws_smithy_types::Document>,
}
impl CreateWorkspaceInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn org_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.org_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_org_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.org_id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_org_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.org_id
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_admin_email(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_admin_email = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_admin_email(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_admin_email = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_admin_email(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_admin_email
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_name = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_name
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_status(mut self, input: crate::types::WorkspaceStatus) -> Self {
        self.workspace_status = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_status(mut self, input: ::std::option::Option<crate::types::WorkspaceStatus>) -> Self {
        self.workspace_status = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_status(&self) -> &::std::option::Option<crate::types::WorkspaceStatus> {
        &self.workspace_status
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_strict_mode(mut self, input: bool) -> Self {
        self.workspace_strict_mode = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_strict_mode(mut self, input: ::std::option::Option<bool>) -> Self {
        self.workspace_strict_mode = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_strict_mode(&self) -> &::std::option::Option<bool> {
        &self.workspace_strict_mode
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn metrics(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.metrics = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_metrics(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.metrics = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_metrics(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.metrics
    }
    /// Consumes the builder and constructs a [`CreateWorkspaceInput`](crate::operation::create_workspace::CreateWorkspaceInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::create_workspace::CreateWorkspaceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::create_workspace::CreateWorkspaceInput {
                org_id: self.org_id
                ,
                workspace_admin_email: self.workspace_admin_email
                ,
                workspace_name: self.workspace_name
                ,
                workspace_status: self.workspace_status
                ,
                workspace_strict_mode: self.workspace_strict_mode
                ,
                metrics: self.metrics
                ,
            }
        )
    }
}

