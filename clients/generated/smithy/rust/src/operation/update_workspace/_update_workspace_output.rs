// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateWorkspaceOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_name: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub organisation_id: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub organisation_name: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_schema_name: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_status: crate::types::WorkspaceStatus,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_admin_email: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub config_version: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub created_by: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub last_modified_by: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub last_modified_at: ::aws_smithy_types::DateTime,
    #[allow(missing_docs)] // documentation missing in model
    pub created_at: ::aws_smithy_types::DateTime,
    #[allow(missing_docs)] // documentation missing in model
    pub mandatory_dimensions: ::std::option::Option<::std::vec::Vec::<::std::string::String>>,
    #[allow(missing_docs)] // documentation missing in model
    pub workspace_strict_mode: bool,
}
impl  UpdateWorkspaceOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_name(&self) -> &str {
        use std::ops::Deref; self.workspace_name.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn organisation_id(&self) -> &str {
        use std::ops::Deref; self.organisation_id.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn organisation_name(&self) -> &str {
        use std::ops::Deref; self.organisation_name.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_schema_name(&self) -> &str {
        use std::ops::Deref; self.workspace_schema_name.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_status(&self) -> &crate::types::WorkspaceStatus {
        &self.workspace_status
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_admin_email(&self) -> &str {
        use std::ops::Deref; self.workspace_admin_email.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn config_version(&self) -> ::std::option::Option<&str> {
        self.config_version.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn created_by(&self) -> &str {
        use std::ops::Deref; self.created_by.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified_by(&self) -> &str {
        use std::ops::Deref; self.last_modified_by.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified_at(&self) -> &::aws_smithy_types::DateTime {
        &self.last_modified_at
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    #[allow(missing_docs)] // documentation missing in model
    /// 
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.mandatory_dimensions.is_none()`.
    pub fn mandatory_dimensions(&self) -> &[::std::string::String] {
        self.mandatory_dimensions.as_deref()
        .unwrap_or_default()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn workspace_strict_mode(&self) -> bool {
        self.workspace_strict_mode
    }
}
impl UpdateWorkspaceOutput {
    /// Creates a new builder-style object to manufacture [`UpdateWorkspaceOutput`](crate::operation::update_workspace::UpdateWorkspaceOutput).
    pub fn builder() -> crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder {
        crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::default()
    }
}

/// A builder for [`UpdateWorkspaceOutput`](crate::operation::update_workspace::UpdateWorkspaceOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateWorkspaceOutputBuilder {
    pub(crate) workspace_name: ::std::option::Option<::std::string::String>,
    pub(crate) organisation_id: ::std::option::Option<::std::string::String>,
    pub(crate) organisation_name: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_schema_name: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_status: ::std::option::Option<crate::types::WorkspaceStatus>,
    pub(crate) workspace_admin_email: ::std::option::Option<::std::string::String>,
    pub(crate) config_version: ::std::option::Option<::std::string::String>,
    pub(crate) created_by: ::std::option::Option<::std::string::String>,
    pub(crate) last_modified_by: ::std::option::Option<::std::string::String>,
    pub(crate) last_modified_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) mandatory_dimensions: ::std::option::Option<::std::vec::Vec::<::std::string::String>>,
    pub(crate) workspace_strict_mode: ::std::option::Option<bool>,
}
impl UpdateWorkspaceOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_name = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_name
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn organisation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.organisation_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_organisation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.organisation_id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_organisation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.organisation_id
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn organisation_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.organisation_name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_organisation_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.organisation_name = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_organisation_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.organisation_name
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_schema_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_schema_name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_schema_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_schema_name = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_schema_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_schema_name
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_status(mut self, input: crate::types::WorkspaceStatus) -> Self {
        self.workspace_status = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_status(mut self, input: ::std::option::Option<crate::types::WorkspaceStatus>) -> Self {
        self.workspace_status = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_status(&self) -> &::std::option::Option<crate::types::WorkspaceStatus> {
        &self.workspace_status
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_admin_email(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_admin_email = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_admin_email(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_admin_email = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_admin_email(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_admin_email
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn config_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.config_version = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_config_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.config_version = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_config_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.config_version
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn created_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.created_by = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_created_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.created_by = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_created_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.created_by
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn last_modified_by(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_modified_by = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_last_modified_by(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_modified_by = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_last_modified_by(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_modified_by
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn last_modified_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_at = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_last_modified_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_at = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_last_modified_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_at
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// Appends an item to `mandatory_dimensions`.
    ///
    /// To override the contents of this collection use [`set_mandatory_dimensions`](Self::set_mandatory_dimensions).
    ///
    pub fn mandatory_dimensions(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.mandatory_dimensions.unwrap_or_default();
                        v.push(input.into());
                        self.mandatory_dimensions = ::std::option::Option::Some(v);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_mandatory_dimensions(mut self, input: ::std::option::Option<::std::vec::Vec::<::std::string::String>>) -> Self {
        self.mandatory_dimensions = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_mandatory_dimensions(&self) -> &::std::option::Option<::std::vec::Vec::<::std::string::String>> {
        &self.mandatory_dimensions
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn workspace_strict_mode(mut self, input: bool) -> Self {
        self.workspace_strict_mode = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_workspace_strict_mode(mut self, input: ::std::option::Option<bool>) -> Self {
        self.workspace_strict_mode = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_workspace_strict_mode(&self) -> &::std::option::Option<bool> {
        &self.workspace_strict_mode
    }
    /// Consumes the builder and constructs a [`UpdateWorkspaceOutput`](crate::operation::update_workspace::UpdateWorkspaceOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`workspace_name`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::workspace_name)
    /// - [`organisation_id`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::organisation_id)
    /// - [`organisation_name`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::organisation_name)
    /// - [`workspace_schema_name`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::workspace_schema_name)
    /// - [`workspace_status`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::workspace_status)
    /// - [`workspace_admin_email`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::workspace_admin_email)
    /// - [`created_by`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::created_by)
    /// - [`last_modified_by`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::last_modified_by)
    /// - [`last_modified_at`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::last_modified_at)
    /// - [`created_at`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::created_at)
    /// - [`workspace_strict_mode`](crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder::workspace_strict_mode)
    pub fn build(self) -> ::std::result::Result<crate::operation::update_workspace::UpdateWorkspaceOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::update_workspace::UpdateWorkspaceOutput {
                workspace_name: self.workspace_name
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("workspace_name", "workspace_name was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                organisation_id: self.organisation_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("organisation_id", "organisation_id was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                organisation_name: self.organisation_name
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("organisation_name", "organisation_name was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                workspace_schema_name: self.workspace_schema_name
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("workspace_schema_name", "workspace_schema_name was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                workspace_status: self.workspace_status
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("workspace_status", "workspace_status was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                workspace_admin_email: self.workspace_admin_email
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("workspace_admin_email", "workspace_admin_email was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                config_version: self.config_version
                ,
                created_by: self.created_by
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("created_by", "created_by was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                last_modified_by: self.last_modified_by
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("last_modified_by", "last_modified_by was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                last_modified_at: self.last_modified_at
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("last_modified_at", "last_modified_at was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                created_at: self.created_at
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("created_at", "created_at was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
                mandatory_dimensions: self.mandatory_dimensions
                ,
                workspace_strict_mode: self.workspace_strict_mode
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("workspace_strict_mode", "workspace_strict_mode was not specified but it is required when building UpdateWorkspaceOutput")
                    )?
                ,
            }
        )
    }
}

