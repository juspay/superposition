// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn applicable_variants_output_output_correct_errors(mut builder: crate::operation::applicable_variants::builders::ApplicableVariantsOutputBuilder) -> crate::operation::applicable_variants::builders::ApplicableVariantsOutputBuilder {
                if builder.data.is_none() { builder.data = Some(Default::default()) }
                builder
            }

pub(crate) fn conclude_experiment_output_output_correct_errors(mut builder: crate::operation::conclude_experiment::builders::ConcludeExperimentOutputBuilder) -> crate::operation::conclude_experiment::builders::ConcludeExperimentOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified.is_none() { builder.last_modified = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.override_keys.is_none() { builder.override_keys = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::ExperimentStatusType>().ok() }
if builder.traffic_percentage.is_none() { builder.traffic_percentage = Some(Default::default()) }
if builder.context.is_none() { builder.context = Some(Default::default()) }
if builder.variants.is_none() { builder.variants = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn create_context_output_output_correct_errors(mut builder: crate::operation::create_context::builders::CreateContextOutputBuilder) -> crate::operation::create_context::builders::CreateContextOutputBuilder {
                if builder.context_id.is_none() { builder.context_id = Some(Default::default()) }
if builder.override_id.is_none() { builder.override_id = Some(Default::default()) }
if builder.weight.is_none() { builder.weight = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn create_default_config_output_output_correct_errors(mut builder: crate::operation::create_default_config::builders::CreateDefaultConfigOutputBuilder) -> crate::operation::create_default_config::builders::CreateDefaultConfigOutputBuilder {
                if builder.key.is_none() { builder.key = Some(Default::default()) }
if builder.value.is_none() { builder.value = Some(Default::default()) }
if builder.schema.is_none() { builder.schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
                builder
            }

pub(crate) fn create_dimension_output_output_correct_errors(mut builder: crate::operation::create_dimension::builders::CreateDimensionOutputBuilder) -> crate::operation::create_dimension::builders::CreateDimensionOutputBuilder {
                if builder.dimension.is_none() { builder.dimension = Some(Default::default()) }
if builder.position.is_none() { builder.position = Some(Default::default()) }
if builder.schema.is_none() { builder.schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.dependencies.is_none() { builder.dependencies = Some(Default::default()) }
if builder.dependents.is_none() { builder.dependents = Some(Default::default()) }
if builder.dependency_graph.is_none() { builder.dependency_graph = Some(Default::default()) }
                builder
            }

pub(crate) fn create_experiment_output_output_correct_errors(mut builder: crate::operation::create_experiment::builders::CreateExperimentOutputBuilder) -> crate::operation::create_experiment::builders::CreateExperimentOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified.is_none() { builder.last_modified = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.override_keys.is_none() { builder.override_keys = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::ExperimentStatusType>().ok() }
if builder.traffic_percentage.is_none() { builder.traffic_percentage = Some(Default::default()) }
if builder.context.is_none() { builder.context = Some(Default::default()) }
if builder.variants.is_none() { builder.variants = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn create_function_output_output_correct_errors(mut builder: crate::operation::create_function::builders::CreateFunctionOutputBuilder) -> crate::operation::create_function::builders::CreateFunctionOutputBuilder {
                if builder.function_name.is_none() { builder.function_name = Some(Default::default()) }
if builder.draft_code.is_none() { builder.draft_code = Some(Default::default()) }
if builder.draft_runtime_version.is_none() { builder.draft_runtime_version = Some(Default::default()) }
if builder.draft_edited_at.is_none() { builder.draft_edited_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.draft_edited_by.is_none() { builder.draft_edited_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.function_type.is_none() { builder.function_type = "no value was set".parse::<crate::types::FunctionTypes>().ok() }
                builder
            }

pub(crate) fn create_organisation_output_output_correct_errors(mut builder: crate::operation::create_organisation::builders::CreateOrganisationOutputBuilder) -> crate::operation::create_organisation::builders::CreateOrganisationOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.admin_email.is_none() { builder.admin_email = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::OrgStatus>().ok() }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_at.is_none() { builder.updated_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_by.is_none() { builder.updated_by = Some(Default::default()) }
                builder
            }

pub(crate) fn create_type_templates_output_output_correct_errors(mut builder: crate::operation::create_type_templates::builders::CreateTypeTemplatesOutputBuilder) -> crate::operation::create_type_templates::builders::CreateTypeTemplatesOutputBuilder {
                if builder.type_name.is_none() { builder.type_name = Some(Default::default()) }
if builder.type_schema.is_none() { builder.type_schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
                builder
            }

pub(crate) fn create_webhook_output_output_correct_errors(mut builder: crate::operation::create_webhook::builders::CreateWebhookOutputBuilder) -> crate::operation::create_webhook::builders::CreateWebhookOutputBuilder {
                if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.enabled.is_none() { builder.enabled = Some(Default::default()) }
if builder.url.is_none() { builder.url = Some(Default::default()) }
if builder.method.is_none() { builder.method = "no value was set".parse::<crate::types::HttpMethod>().ok() }
if builder.version.is_none() { builder.version = "no value was set".parse::<crate::types::Version>().ok() }
if builder.events.is_none() { builder.events = Some(Default::default()) }
if builder.max_retries.is_none() { builder.max_retries = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
                builder
            }

pub(crate) fn create_workspace_output_output_correct_errors(mut builder: crate::operation::create_workspace::builders::CreateWorkspaceOutputBuilder) -> crate::operation::create_workspace::builders::CreateWorkspaceOutputBuilder {
                if builder.workspace_name.is_none() { builder.workspace_name = Some(Default::default()) }
if builder.organisation_id.is_none() { builder.organisation_id = Some(Default::default()) }
if builder.organisation_name.is_none() { builder.organisation_name = Some(Default::default()) }
if builder.workspace_schema_name.is_none() { builder.workspace_schema_name = Some(Default::default()) }
if builder.workspace_status.is_none() { builder.workspace_status = "no value was set".parse::<crate::types::WorkspaceStatus>().ok() }
if builder.workspace_admin_email.is_none() { builder.workspace_admin_email = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.workspace_strict_mode.is_none() { builder.workspace_strict_mode = Some(Default::default()) }
                builder
            }

pub(crate) fn delete_type_templates_output_output_correct_errors(mut builder: crate::operation::delete_type_templates::builders::DeleteTypeTemplatesOutputBuilder) -> crate::operation::delete_type_templates::builders::DeleteTypeTemplatesOutputBuilder {
                if builder.type_name.is_none() { builder.type_name = Some(Default::default()) }
if builder.type_schema.is_none() { builder.type_schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
                builder
            }

pub(crate) fn discard_experiment_output_output_correct_errors(mut builder: crate::operation::discard_experiment::builders::DiscardExperimentOutputBuilder) -> crate::operation::discard_experiment::builders::DiscardExperimentOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified.is_none() { builder.last_modified = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.override_keys.is_none() { builder.override_keys = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::ExperimentStatusType>().ok() }
if builder.traffic_percentage.is_none() { builder.traffic_percentage = Some(Default::default()) }
if builder.context.is_none() { builder.context = Some(Default::default()) }
if builder.variants.is_none() { builder.variants = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn get_context_output_output_correct_errors(mut builder: crate::operation::get_context::builders::GetContextOutputBuilder) -> crate::operation::get_context::builders::GetContextOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
                builder
            }

pub(crate) fn get_context_from_condition_output_output_correct_errors(mut builder: crate::operation::get_context_from_condition::builders::GetContextFromConditionOutputBuilder) -> crate::operation::get_context_from_condition::builders::GetContextFromConditionOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
                builder
            }

pub(crate) fn get_experiment_output_output_correct_errors(mut builder: crate::operation::get_experiment::builders::GetExperimentOutputBuilder) -> crate::operation::get_experiment::builders::GetExperimentOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified.is_none() { builder.last_modified = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.override_keys.is_none() { builder.override_keys = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::ExperimentStatusType>().ok() }
if builder.traffic_percentage.is_none() { builder.traffic_percentage = Some(Default::default()) }
if builder.context.is_none() { builder.context = Some(Default::default()) }
if builder.variants.is_none() { builder.variants = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn get_function_output_output_correct_errors(mut builder: crate::operation::get_function::builders::GetFunctionOutputBuilder) -> crate::operation::get_function::builders::GetFunctionOutputBuilder {
                if builder.function_name.is_none() { builder.function_name = Some(Default::default()) }
if builder.draft_code.is_none() { builder.draft_code = Some(Default::default()) }
if builder.draft_runtime_version.is_none() { builder.draft_runtime_version = Some(Default::default()) }
if builder.draft_edited_at.is_none() { builder.draft_edited_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.draft_edited_by.is_none() { builder.draft_edited_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.function_type.is_none() { builder.function_type = "no value was set".parse::<crate::types::FunctionTypes>().ok() }
                builder
            }

pub(crate) fn get_organisation_output_output_correct_errors(mut builder: crate::operation::get_organisation::builders::GetOrganisationOutputBuilder) -> crate::operation::get_organisation::builders::GetOrganisationOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.admin_email.is_none() { builder.admin_email = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::OrgStatus>().ok() }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_at.is_none() { builder.updated_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_by.is_none() { builder.updated_by = Some(Default::default()) }
                builder
            }

pub(crate) fn get_webhook_output_output_correct_errors(mut builder: crate::operation::get_webhook::builders::GetWebhookOutputBuilder) -> crate::operation::get_webhook::builders::GetWebhookOutputBuilder {
                if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.enabled.is_none() { builder.enabled = Some(Default::default()) }
if builder.url.is_none() { builder.url = Some(Default::default()) }
if builder.method.is_none() { builder.method = "no value was set".parse::<crate::types::HttpMethod>().ok() }
if builder.version.is_none() { builder.version = "no value was set".parse::<crate::types::Version>().ok() }
if builder.events.is_none() { builder.events = Some(Default::default()) }
if builder.max_retries.is_none() { builder.max_retries = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
                builder
            }

pub(crate) fn list_experiment_output_output_correct_errors(mut builder: crate::operation::list_experiment::builders::ListExperimentOutputBuilder) -> crate::operation::list_experiment::builders::ListExperimentOutputBuilder {
                if builder.total_pages.is_none() { builder.total_pages = Some(Default::default()) }
if builder.total_items.is_none() { builder.total_items = Some(Default::default()) }
if builder.data.is_none() { builder.data = Some(Default::default()) }
                builder
            }

pub(crate) fn list_versions_output_output_correct_errors(mut builder: crate::operation::list_versions::builders::ListVersionsOutputBuilder) -> crate::operation::list_versions::builders::ListVersionsOutputBuilder {
                if builder.total_pages.is_none() { builder.total_pages = Some(Default::default()) }
if builder.total_items.is_none() { builder.total_items = Some(Default::default()) }
if builder.data.is_none() { builder.data = Some(Default::default()) }
                builder
            }

pub(crate) fn list_webhook_output_output_correct_errors(mut builder: crate::operation::list_webhook::builders::ListWebhookOutputBuilder) -> crate::operation::list_webhook::builders::ListWebhookOutputBuilder {
                if builder.total_pages.is_none() { builder.total_pages = Some(Default::default()) }
if builder.total_items.is_none() { builder.total_items = Some(Default::default()) }
if builder.data.is_none() { builder.data = Some(Default::default()) }
                builder
            }

pub(crate) fn list_workspace_output_output_correct_errors(mut builder: crate::operation::list_workspace::builders::ListWorkspaceOutputBuilder) -> crate::operation::list_workspace::builders::ListWorkspaceOutputBuilder {
                if builder.total_pages.is_none() { builder.total_pages = Some(Default::default()) }
if builder.total_items.is_none() { builder.total_items = Some(Default::default()) }
if builder.data.is_none() { builder.data = Some(Default::default()) }
                builder
            }

pub(crate) fn move_context_output_output_correct_errors(mut builder: crate::operation::move_context::builders::MoveContextOutputBuilder) -> crate::operation::move_context::builders::MoveContextOutputBuilder {
                if builder.context_id.is_none() { builder.context_id = Some(Default::default()) }
if builder.override_id.is_none() { builder.override_id = Some(Default::default()) }
if builder.weight.is_none() { builder.weight = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn publish_output_output_correct_errors(mut builder: crate::operation::publish::builders::PublishOutputBuilder) -> crate::operation::publish::builders::PublishOutputBuilder {
                if builder.function_name.is_none() { builder.function_name = Some(Default::default()) }
if builder.draft_code.is_none() { builder.draft_code = Some(Default::default()) }
if builder.draft_runtime_version.is_none() { builder.draft_runtime_version = Some(Default::default()) }
if builder.draft_edited_at.is_none() { builder.draft_edited_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.draft_edited_by.is_none() { builder.draft_edited_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.function_type.is_none() { builder.function_type = "no value was set".parse::<crate::types::FunctionTypes>().ok() }
                builder
            }

pub(crate) fn ramp_experiment_output_output_correct_errors(mut builder: crate::operation::ramp_experiment::builders::RampExperimentOutputBuilder) -> crate::operation::ramp_experiment::builders::RampExperimentOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified.is_none() { builder.last_modified = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.override_keys.is_none() { builder.override_keys = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::ExperimentStatusType>().ok() }
if builder.traffic_percentage.is_none() { builder.traffic_percentage = Some(Default::default()) }
if builder.context.is_none() { builder.context = Some(Default::default()) }
if builder.variants.is_none() { builder.variants = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn test_output_output_correct_errors(mut builder: crate::operation::test::builders::TestOutputBuilder) -> crate::operation::test::builders::TestOutputBuilder {
                if builder.fn_output.is_none() { builder.fn_output = Some(Default::default()) }
if builder.stdout.is_none() { builder.stdout = Some(Default::default()) }
if builder.function_type.is_none() { builder.function_type = "no value was set".parse::<crate::types::FunctionTypes>().ok() }
                builder
            }

pub(crate) fn update_default_config_output_output_correct_errors(mut builder: crate::operation::update_default_config::builders::UpdateDefaultConfigOutputBuilder) -> crate::operation::update_default_config::builders::UpdateDefaultConfigOutputBuilder {
                if builder.key.is_none() { builder.key = Some(Default::default()) }
if builder.value.is_none() { builder.value = Some(Default::default()) }
if builder.schema.is_none() { builder.schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
                builder
            }

pub(crate) fn update_dimension_output_output_correct_errors(mut builder: crate::operation::update_dimension::builders::UpdateDimensionOutputBuilder) -> crate::operation::update_dimension::builders::UpdateDimensionOutputBuilder {
                if builder.dimension.is_none() { builder.dimension = Some(Default::default()) }
if builder.position.is_none() { builder.position = Some(Default::default()) }
if builder.schema.is_none() { builder.schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.dependencies.is_none() { builder.dependencies = Some(Default::default()) }
if builder.dependents.is_none() { builder.dependents = Some(Default::default()) }
if builder.dependency_graph.is_none() { builder.dependency_graph = Some(Default::default()) }
                builder
            }

pub(crate) fn update_function_output_output_correct_errors(mut builder: crate::operation::update_function::builders::UpdateFunctionOutputBuilder) -> crate::operation::update_function::builders::UpdateFunctionOutputBuilder {
                if builder.function_name.is_none() { builder.function_name = Some(Default::default()) }
if builder.draft_code.is_none() { builder.draft_code = Some(Default::default()) }
if builder.draft_runtime_version.is_none() { builder.draft_runtime_version = Some(Default::default()) }
if builder.draft_edited_at.is_none() { builder.draft_edited_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.draft_edited_by.is_none() { builder.draft_edited_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.function_type.is_none() { builder.function_type = "no value was set".parse::<crate::types::FunctionTypes>().ok() }
                builder
            }

pub(crate) fn update_organisation_output_output_correct_errors(mut builder: crate::operation::update_organisation::builders::UpdateOrganisationOutputBuilder) -> crate::operation::update_organisation::builders::UpdateOrganisationOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.admin_email.is_none() { builder.admin_email = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::OrgStatus>().ok() }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_at.is_none() { builder.updated_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_by.is_none() { builder.updated_by = Some(Default::default()) }
                builder
            }

pub(crate) fn update_override_output_output_correct_errors(mut builder: crate::operation::update_override::builders::UpdateOverrideOutputBuilder) -> crate::operation::update_override::builders::UpdateOverrideOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
                builder
            }

pub(crate) fn update_overrides_experiment_output_output_correct_errors(mut builder: crate::operation::update_overrides_experiment::builders::UpdateOverridesExperimentOutputBuilder) -> crate::operation::update_overrides_experiment::builders::UpdateOverridesExperimentOutputBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified.is_none() { builder.last_modified = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.override_keys.is_none() { builder.override_keys = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::ExperimentStatusType>().ok() }
if builder.traffic_percentage.is_none() { builder.traffic_percentage = Some(Default::default()) }
if builder.context.is_none() { builder.context = Some(Default::default()) }
if builder.variants.is_none() { builder.variants = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn update_type_templates_output_output_correct_errors(mut builder: crate::operation::update_type_templates::builders::UpdateTypeTemplatesOutputBuilder) -> crate::operation::update_type_templates::builders::UpdateTypeTemplatesOutputBuilder {
                if builder.type_name.is_none() { builder.type_name = Some(Default::default()) }
if builder.type_schema.is_none() { builder.type_schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
                builder
            }

pub(crate) fn update_webhook_output_output_correct_errors(mut builder: crate::operation::update_webhook::builders::UpdateWebhookOutputBuilder) -> crate::operation::update_webhook::builders::UpdateWebhookOutputBuilder {
                if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.enabled.is_none() { builder.enabled = Some(Default::default()) }
if builder.url.is_none() { builder.url = Some(Default::default()) }
if builder.method.is_none() { builder.method = "no value was set".parse::<crate::types::HttpMethod>().ok() }
if builder.version.is_none() { builder.version = "no value was set".parse::<crate::types::Version>().ok() }
if builder.events.is_none() { builder.events = Some(Default::default()) }
if builder.max_retries.is_none() { builder.max_retries = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
                builder
            }

pub(crate) fn update_workspace_output_output_correct_errors(mut builder: crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder) -> crate::operation::update_workspace::builders::UpdateWorkspaceOutputBuilder {
                if builder.workspace_name.is_none() { builder.workspace_name = Some(Default::default()) }
if builder.organisation_id.is_none() { builder.organisation_id = Some(Default::default()) }
if builder.organisation_name.is_none() { builder.organisation_name = Some(Default::default()) }
if builder.workspace_schema_name.is_none() { builder.workspace_schema_name = Some(Default::default()) }
if builder.workspace_status.is_none() { builder.workspace_status = "no value was set".parse::<crate::types::WorkspaceStatus>().ok() }
if builder.workspace_admin_email.is_none() { builder.workspace_admin_email = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.workspace_strict_mode.is_none() { builder.workspace_strict_mode = Some(Default::default()) }
                builder
            }

pub(crate) fn context_full_correct_errors(mut builder: crate::types::builders::ContextFullBuilder) -> crate::types::builders::ContextFullBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
                builder
            }

pub(crate) fn default_config_full_correct_errors(mut builder: crate::types::builders::DefaultConfigFullBuilder) -> crate::types::builders::DefaultConfigFullBuilder {
                if builder.key.is_none() { builder.key = Some(Default::default()) }
if builder.value.is_none() { builder.value = Some(Default::default()) }
if builder.schema.is_none() { builder.schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
                builder
            }

pub(crate) fn dimension_ext_correct_errors(mut builder: crate::types::builders::DimensionExtBuilder) -> crate::types::builders::DimensionExtBuilder {
                if builder.dimension.is_none() { builder.dimension = Some(Default::default()) }
if builder.position.is_none() { builder.position = Some(Default::default()) }
if builder.schema.is_none() { builder.schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.dependencies.is_none() { builder.dependencies = Some(Default::default()) }
if builder.dependents.is_none() { builder.dependents = Some(Default::default()) }
if builder.dependency_graph.is_none() { builder.dependency_graph = Some(Default::default()) }
                builder
            }

pub(crate) fn experiment_response_correct_errors(mut builder: crate::types::builders::ExperimentResponseBuilder) -> crate::types::builders::ExperimentResponseBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified.is_none() { builder.last_modified = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.override_keys.is_none() { builder.override_keys = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::ExperimentStatusType>().ok() }
if builder.traffic_percentage.is_none() { builder.traffic_percentage = Some(Default::default()) }
if builder.context.is_none() { builder.context = Some(Default::default()) }
if builder.variants.is_none() { builder.variants = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
                builder
            }

pub(crate) fn function_response_correct_errors(mut builder: crate::types::builders::FunctionResponseBuilder) -> crate::types::builders::FunctionResponseBuilder {
                if builder.function_name.is_none() { builder.function_name = Some(Default::default()) }
if builder.draft_code.is_none() { builder.draft_code = Some(Default::default()) }
if builder.draft_runtime_version.is_none() { builder.draft_runtime_version = Some(Default::default()) }
if builder.draft_edited_at.is_none() { builder.draft_edited_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.draft_edited_by.is_none() { builder.draft_edited_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.function_type.is_none() { builder.function_type = "no value was set".parse::<crate::types::FunctionTypes>().ok() }
                builder
            }

pub(crate) fn list_versions_member_correct_errors(mut builder: crate::types::builders::ListVersionsMemberBuilder) -> crate::types::builders::ListVersionsMemberBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.config.is_none() { builder.config = Some(Default::default()) }
if builder.config_hash.is_none() { builder.config_hash = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
                builder
            }

pub(crate) fn organisation_response_correct_errors(mut builder: crate::types::builders::OrganisationResponseBuilder) -> crate::types::builders::OrganisationResponseBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.admin_email.is_none() { builder.admin_email = Some(Default::default()) }
if builder.status.is_none() { builder.status = "no value was set".parse::<crate::types::OrgStatus>().ok() }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_at.is_none() { builder.updated_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.updated_by.is_none() { builder.updated_by = Some(Default::default()) }
                builder
            }

pub(crate) fn type_templates_response_correct_errors(mut builder: crate::types::builders::TypeTemplatesResponseBuilder) -> crate::types::builders::TypeTemplatesResponseBuilder {
                if builder.type_name.is_none() { builder.type_name = Some(Default::default()) }
if builder.type_schema.is_none() { builder.type_schema = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
                builder
            }

pub(crate) fn variant_correct_errors(mut builder: crate::types::builders::VariantBuilder) -> crate::types::builders::VariantBuilder {
                if builder.id.is_none() { builder.id = Some(Default::default()) }
if builder.variant_type.is_none() { builder.variant_type = "no value was set".parse::<crate::types::VariantType>().ok() }
if builder.overrides.is_none() { builder.overrides = Some(Default::default()) }
                builder
            }

pub(crate) fn webhook_response_correct_errors(mut builder: crate::types::builders::WebhookResponseBuilder) -> crate::types::builders::WebhookResponseBuilder {
                if builder.name.is_none() { builder.name = Some(Default::default()) }
if builder.description.is_none() { builder.description = Some(Default::default()) }
if builder.enabled.is_none() { builder.enabled = Some(Default::default()) }
if builder.url.is_none() { builder.url = Some(Default::default()) }
if builder.method.is_none() { builder.method = "no value was set".parse::<crate::types::HttpMethod>().ok() }
if builder.version.is_none() { builder.version = "no value was set".parse::<crate::types::Version>().ok() }
if builder.events.is_none() { builder.events = Some(Default::default()) }
if builder.max_retries.is_none() { builder.max_retries = Some(Default::default()) }
if builder.change_reason.is_none() { builder.change_reason = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
                builder
            }

pub(crate) fn workspace_response_correct_errors(mut builder: crate::types::builders::WorkspaceResponseBuilder) -> crate::types::builders::WorkspaceResponseBuilder {
                if builder.workspace_name.is_none() { builder.workspace_name = Some(Default::default()) }
if builder.organisation_id.is_none() { builder.organisation_id = Some(Default::default()) }
if builder.organisation_name.is_none() { builder.organisation_name = Some(Default::default()) }
if builder.workspace_schema_name.is_none() { builder.workspace_schema_name = Some(Default::default()) }
if builder.workspace_status.is_none() { builder.workspace_status = "no value was set".parse::<crate::types::WorkspaceStatus>().ok() }
if builder.workspace_admin_email.is_none() { builder.workspace_admin_email = Some(Default::default()) }
if builder.created_by.is_none() { builder.created_by = Some(Default::default()) }
if builder.last_modified_by.is_none() { builder.last_modified_by = Some(Default::default()) }
if builder.last_modified_at.is_none() { builder.last_modified_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.created_at.is_none() { builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64)) }
if builder.workspace_strict_mode.is_none() { builder.workspace_strict_mode = Some(Default::default()) }
                builder
            }

