# Code generated by smithy-python-codegen DO NOT EDIT.

from types import MappingProxyType

from smithy_core.prelude import BOOLEAN, DOCUMENT, INTEGER, LONG, STRING, UNIT
from smithy_core.schemas import Schema
from smithy_core.shapes import ShapeID, ShapeType
from smithy_core.traits import Trait


STRING_LIST = Schema.collection(
    id=ShapeID("io.superposition#StringList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
            "index": 0,
        },

    }
)

ADD_MEMBERS_TO_GROUP_INPUT = Schema.collection(
    id=ShapeID("io.superposition#AddMembersToGroupInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ModifyMembersToGroupRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CONDITION = Schema.collection(
    id=ShapeID("io.superposition#Condition"),
    shape_type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
            "index": 0,
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
        },

    }
)

DATE_TIME = Schema(
    id=ShapeID("io.superposition#DateTime"),
    shape_type=ShapeType.TIMESTAMP,
    traits=[
        Trait.new(id=ShapeID("smithy.api#timestampFormat"), value="date-time"),

    ],

)

ADD_MEMBERS_TO_GROUP_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#AddMembersToGroupOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentGroupResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_hash": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

INTERNAL_SERVER_ERROR = Schema.collection(
    id=ShapeID("io.superposition#InternalServerError"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#error"), value="server"),
        Trait.new(id=ShapeID("smithy.api#httpError"), value=500),

    ],
    members={
        "message": {
            "target": STRING,
            "index": 0,
        },

    }
)

RESOURCE_NOT_FOUND = Schema.collection(
    id=ShapeID("io.superposition#ResourceNotFound"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#error"), value="client"),
        Trait.new(id=ShapeID("smithy.api#httpError"), value=404),

    ],

)

ADD_MEMBERS_TO_GROUP = Schema(
    id=ShapeID("io.superposition#AddMembersToGroup"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiment-groups/{id}/add-members",
            })),

    ],

)

APPLICABLE_VARIANTS_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ApplicableVariantsInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "toss": {
            "target": INTEGER,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

VARIANT_TYPE = Schema.collection(
    id=ShapeID("io.superposition#VariantType"),
    shape_type=ShapeType.ENUM,
    members={
        "CONTROL": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="CONTROL"),

            ],
        },

        "EXPERIMENTAL": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="EXPERIMENTAL"),

            ],
        },

    }
)

VARIANT = Schema.collection(
    id=ShapeID("io.superposition#Variant"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variant_type": {
            "target": VARIANT_TYPE,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_id": {
            "target": STRING,
            "index": 2,
        },

        "override_id": {
            "target": STRING,
            "index": 3,
        },

        "overrides": {
            "target": DOCUMENT,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_VARIANT = Schema.collection(
    id=ShapeID("io.superposition#ListVariant"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": VARIANT,
            "index": 0,
        },

    }
)

APPLICABLE_VARIANTS_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ApplicableVariantsOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "data": {
            "target": LIST_VARIANT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

APPLICABLE_VARIANTS = Schema(
    id=ShapeID("io.superposition#ApplicableVariants"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/experiments/applicable-variants",
            })),

    ],

)

LIST_AUDIT_LOGS_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListAuditLogsInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "count": {
            "target": INTEGER,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "from_date": {
            "target": DATE_TIME,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="from_date"),

            ],
        },

        "to_date": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="to_date"),

            ],
        },

        "tables": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="table"),

            ],
        },

        "action": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="action"),

            ],
        },

        "username": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="username"),

            ],
        },

    }
)

AUDIT_LOG_FULL = Schema.collection(
    id=ShapeID("io.superposition#AuditLogFull"),

    members={
        "table_name": {
            "target": STRING,
            "index": 0,
        },

        "user_name": {
            "target": STRING,
            "index": 1,
        },

        "timestamp": {
            "target": DATE_TIME,
            "index": 2,
        },

        "action": {
            "target": STRING,
            "index": 3,
        },

        "original_data": {
            "target": DOCUMENT,
            "index": 4,
        },

        "new_data": {
            "target": DOCUMENT,
            "index": 5,
        },

        "query": {
            "target": STRING,
            "index": 6,
        },

    }
)

AUDIT_LOG_LIST = Schema.collection(
    id=ShapeID("io.superposition#AuditLogList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": AUDIT_LOG_FULL,
            "index": 0,
        },

    }
)

LIST_AUDIT_LOGS_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListAuditLogsOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
        },

        "data": {
            "target": AUDIT_LOG_LIST,
            "index": 2,
        },

    }
)

LIST_AUDIT_LOGS = Schema(
    id=ShapeID("io.superposition#ListAuditLogs"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/audit",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

AUTOCOMPLETE_FUNCTION_REQUEST = Schema.collection(
    id=ShapeID("io.superposition#AutocompleteFunctionRequest"),

    members={
        "name": {
            "target": STRING,
            "index": 0,
        },

        "prefix": {
            "target": STRING,
            "index": 1,
        },

        "environment": {
            "target": DOCUMENT,
            "index": 2,
        },

    }
)

CONTEXT_MOVE = Schema.collection(
    id=ShapeID("io.superposition#ContextMove"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
        },

        "context": {
            "target": CONDITION,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 2,
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

OVERRIDES = Schema.collection(
    id=ShapeID("io.superposition#Overrides"),
    shape_type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
            "index": 0,
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
        },

    }
)

CONTEXT_PUT = Schema.collection(
    id=ShapeID("io.superposition#ContextPut"),

    members={
        "context": {
            "target": CONDITION,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override": {
            "target": OVERRIDES,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 2,
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CONTEXT_IDENTIFIER = Schema.collection(
    id=ShapeID("io.superposition#ContextIdentifier"),
    shape_type=ShapeType.UNION,
    members={
        "id": {
            "target": STRING,
            "index": 0,
        },

        "context": {
            "target": CONDITION,
            "index": 1,
        },

    }
)

UPDATE_CONTEXT_OVERRIDE_REQUEST = Schema.collection(
    id=ShapeID("io.superposition#UpdateContextOverrideRequest"),

    members={
        "context": {
            "target": CONTEXT_IDENTIFIER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override": {
            "target": OVERRIDES,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 2,
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CONTEXT_ACTION = Schema.collection(
    id=ShapeID("io.superposition#ContextAction"),
    shape_type=ShapeType.UNION,
    members={
        "PUT": {
            "target": CONTEXT_PUT,
            "index": 0,
        },

        "REPLACE": {
            "target": UPDATE_CONTEXT_OVERRIDE_REQUEST,
            "index": 1,
        },

        "DELETE": {
            "target": STRING,
            "index": 2,
        },

        "MOVE": {
            "target": CONTEXT_MOVE,
            "index": 3,
        },

    }
)

BULK_OPERATION_LIST = Schema.collection(
    id=ShapeID("io.superposition#BulkOperationList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": CONTEXT_ACTION,
            "index": 0,
        },

    }
)

BULK_OPERATION_REQ = Schema.collection(
    id=ShapeID("io.superposition#BulkOperationReq"),

    members={
        "operations": {
            "target": BULK_OPERATION_LIST,
            "index": 0,
        },

    }
)

BULK_OPERATION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#BulkOperationInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_tags": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-tags"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "bulk_operation": {
            "target": BULK_OPERATION_REQ,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpPayload")),

            ],
        },

    }
)

WEIGHT = Schema(
    id=ShapeID("io.superposition#Weight"),
    shape_type=ShapeType.STRING,

)

CONTEXT_MOVE_OUT = Schema.collection(
    id=ShapeID("io.superposition#ContextMoveOut"),

    members={
        "context_id": {
            "target": STRING,
            "index": 0,
        },

        "override_id": {
            "target": STRING,
            "index": 1,
        },

        "weight": {
            "target": WEIGHT,
            "index": 2,
        },

        "description": {
            "target": STRING,
            "index": 3,
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
        },

    }
)

CONTEXT_PUT_OUT = Schema.collection(
    id=ShapeID("io.superposition#ContextPutOut"),

    members={
        "context_id": {
            "target": STRING,
            "index": 0,
        },

        "override_id": {
            "target": STRING,
            "index": 1,
        },

        "weight": {
            "target": WEIGHT,
            "index": 2,
        },

        "description": {
            "target": STRING,
            "index": 3,
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
        },

    }
)

CONTEXT_ACTION_OUT = Schema.collection(
    id=ShapeID("io.superposition#ContextActionOut"),
    shape_type=ShapeType.UNION,
    members={
        "PUT": {
            "target": CONTEXT_PUT_OUT,
            "index": 0,
        },

        "REPLACE": {
            "target": CONTEXT_PUT_OUT,
            "index": 1,
        },

        "DELETE": {
            "target": STRING,
            "index": 2,
        },

        "MOVE": {
            "target": CONTEXT_MOVE_OUT,
            "index": 3,
        },

    }
)

BULK_OPERATION_OUT_LIST = Schema.collection(
    id=ShapeID("io.superposition#BulkOperationOutList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": CONTEXT_ACTION_OUT,
            "index": 0,
        },

    }
)

BULK_OPERATION_OUT = Schema.collection(
    id=ShapeID("io.superposition#BulkOperationOut"),

    members={
        "output": {
            "target": BULK_OPERATION_OUT_LIST,
            "index": 0,
        },

    }
)

BULK_OPERATION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#BulkOperationOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "bulk_operation_output": {
            "target": BULK_OPERATION_OUT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpPayload")),

            ],
        },

    }
)

BULK_OPERATION = Schema(
    id=ShapeID("io.superposition#BulkOperation"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/context/bulk-operations",
            })),

    ],

)

CONCLUDE_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ConcludeExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 4,
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

EXPERIMENT_TYPE = Schema.collection(
    id=ShapeID("io.superposition#ExperimentType"),
    shape_type=ShapeType.ENUM,
    members={
        "DEFAULT": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="DEFAULT"),

            ],
        },

        "DELETE_OVERRIDES": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="DELETE_OVERRIDES"),

            ],
        },

    }
)

LIST_OVERRIDE_KEYS = Schema.collection(
    id=ShapeID("io.superposition#ListOverrideKeys"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
            "index": 0,
        },

    }
)

EXPERIMENT_STATUS_TYPE = Schema.collection(
    id=ShapeID("io.superposition#ExperimentStatusType"),
    shape_type=ShapeType.ENUM,
    members={
        "CREATED": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="CREATED"),

            ],
        },

        "CONCLUDED": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="CONCLUDED"),

            ],
        },

        "INPROGRESS": {
            "target": UNIT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="INPROGRESS"),

            ],
        },

        "DISCARDED": {
            "target": UNIT,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="DISCARDED"),

            ],
        },

        "PAUSED": {
            "target": UNIT,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="PAUSED"),

            ],
        },

    }
)

CONCLUDE_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ConcludeExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

CONCLUDE_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#ConcludeExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiments/{id}/conclude",
            })),

    ],

)

CONTEXT_MAP = Schema.collection(
    id=ShapeID("io.superposition#ContextMap"),
    shape_type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
            "index": 0,
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
        },

    }
)

GET_CONFIG_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetConfigInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "prefix": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="prefix"),

            ],
        },

        "version": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="version"),

            ],
        },

        "context": {
            "target": CONTEXT_MAP,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

OVERRIDE_WITH_KEYS = Schema.collection(
    id=ShapeID("io.superposition#OverrideWithKeys"),
    shape_type=ShapeType.LIST,
    traits=[
        Trait.new(id=ShapeID("smithy.api#length"), value=MappingProxyType({
                "max": 1,
            })),

    ],
    members={
        "member": {
            "target": STRING,
            "index": 0,
        },

    }
)

CONTEXT_PARTIAL = Schema.collection(
    id=ShapeID("io.superposition#ContextPartial"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
        },

        "condition": {
            "target": CONDITION,
            "index": 1,
        },

        "priority": {
            "target": INTEGER,
            "index": 2,
        },

        "weight": {
            "target": INTEGER,
            "index": 3,
        },

        "override_with_keys": {
            "target": OVERRIDE_WITH_KEYS,
            "index": 4,
        },

    }
)

CONTEXT_LIST = Schema.collection(
    id=ShapeID("io.superposition#ContextList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": CONTEXT_PARTIAL,
            "index": 0,
        },

    }
)

OBJECT = Schema.collection(
    id=ShapeID("io.superposition#Object"),
    shape_type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
            "index": 0,
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
        },

    }
)

OVERRIDES_MAP = Schema.collection(
    id=ShapeID("io.superposition#OverridesMap"),
    shape_type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
            "index": 0,
        },

        "value": {
            "target": OVERRIDES,
            "index": 1,
        },

    }
)

GET_CONFIG_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetConfigOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "contexts": {
            "target": CONTEXT_LIST,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "overrides": {
            "target": OVERRIDES_MAP,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "default_configs": {
            "target": OBJECT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "version": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-version"),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="last-modified"),

            ],
        },

        "audit_id": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-audit-id"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

GET_CONFIG = Schema(
    id=ShapeID("io.superposition#GetConfig"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/config",
            })),

    ],

)

GET_CONFIG_FAST_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetConfigFastInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

GET_CONFIG_FAST_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetConfigFastOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "config": {
            "target": DOCUMENT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpPayload")),

            ],
        },

        "version": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-version"),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="last-modified"),

            ],
        },

        "audit_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-audit-id"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

GET_CONFIG_FAST = Schema(
    id=ShapeID("io.superposition#GetConfigFast"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/config/fast",
            })),

    ],

)

MERGE_STRATEGY = Schema.collection(
    id=ShapeID("io.superposition#MergeStrategy"),
    shape_type=ShapeType.ENUM,
    members={
        "MERGE": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="MERGE"),

            ],
        },

        "REPLACE": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="REPLACE"),

            ],
        },

    }
)

GET_RESOLVED_CONFIG_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetResolvedConfigInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "prefix": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="prefix"),

            ],
        },

        "version": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="version"),

            ],
        },

        "show_reasoning": {
            "target": BOOLEAN,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="show_reasoning"),

            ],
        },

        "merge_strategy": {
            "target": MERGE_STRATEGY,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-merge-strategy"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "context_id": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="context_id"),

            ],
        },

        "context": {
            "target": CONTEXT_MAP,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

GET_RESOLVED_CONFIG_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetResolvedConfigOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "config": {
            "target": DOCUMENT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpPayload")),

            ],
        },

        "version": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-version"),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="last-modified"),

            ],
        },

        "audit_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-audit-id"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

GET_RESOLVED_CONFIG = Schema(
    id=ShapeID("io.superposition#GetResolvedConfig"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/config/resolve",
            })),

    ],

)

LIST_VERSIONS_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListVersionsInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "count": {
            "target": INTEGER,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

    }
)

LIST_VERSIONS_MEMBER = Schema.collection(
    id=ShapeID("io.superposition#ListVersionsMember"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_hash": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "tags": {
            "target": STRING_LIST,
            "index": 5,
        },

    }
)

LIST_VERSIONS_OUT = Schema.collection(
    id=ShapeID("io.superposition#ListVersionsOut"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": LIST_VERSIONS_MEMBER,
            "index": 0,
        },

    }
)

LIST_VERSIONS_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListVersionsOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "data": {
            "target": LIST_VERSIONS_OUT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_VERSIONS = Schema(
    id=ShapeID("io.superposition#ListVersions"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/config/versions",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

CREATE_CONTEXT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateContextInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_tags": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-tags"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "override": {
            "target": OVERRIDES,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 5,
        },

        "change_reason": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_CONTEXT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateContextOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ContextActionResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "context_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "weight": {
            "target": WEIGHT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_CONTEXT = Schema(
    id=ShapeID("io.superposition#CreateContext"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/context",
            })),

    ],

)

DELETE_CONTEXT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteContextInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "config_tags": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-tags"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

DELETE_CONTEXT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteContextOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],

)

DELETE_CONTEXT = Schema(
    id=ShapeID("io.superposition#DeleteContext"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "DELETE",
                "uri": "/context/{id}",
                "code": 201,
            })),

    ],

)

GET_CONTEXT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetContextInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

GET_CONTEXT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetContextOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ContextFull"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": CONDITION,
            "index": 1,
        },

        "override": {
            "target": OVERRIDES,
            "index": 2,
        },

        "override_id": {
            "target": STRING,
            "index": 3,
        },

        "weight": {
            "target": WEIGHT,
            "index": 4,
        },

        "description": {
            "target": STRING,
            "index": 5,
        },

        "change_reason": {
            "target": STRING,
            "index": 6,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 7,
        },

        "created_by": {
            "target": STRING,
            "index": 8,
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
        },

    }
)

GET_CONTEXT = Schema(
    id=ShapeID("io.superposition#GetContext"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/context/{id}",
            })),

    ],

)

GET_CONTEXT_FROM_CONDITION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetContextFromConditionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpPayload")),

            ],
        },

    }
)

GET_CONTEXT_FROM_CONDITION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetContextFromConditionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ContextFull"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": CONDITION,
            "index": 1,
        },

        "override": {
            "target": OVERRIDES,
            "index": 2,
        },

        "override_id": {
            "target": STRING,
            "index": 3,
        },

        "weight": {
            "target": WEIGHT,
            "index": 4,
        },

        "description": {
            "target": STRING,
            "index": 5,
        },

        "change_reason": {
            "target": STRING,
            "index": 6,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 7,
        },

        "created_by": {
            "target": STRING,
            "index": 8,
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
        },

    }
)

GET_CONTEXT_FROM_CONDITION = Schema(
    id=ShapeID("io.superposition#GetContextFromCondition"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/context/get",
            })),

    ],

)

SORT_BY = Schema.collection(
    id=ShapeID("io.superposition#SortBy"),
    shape_type=ShapeType.ENUM,
    members={
        "Desc": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="desc"),

            ],
        },

        "Asc": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="asc"),

            ],
        },

    }
)

CONTEXT_FILTER_SORT_ON = Schema.collection(
    id=ShapeID("io.superposition#ContextFilterSortOn"),
    shape_type=ShapeType.ENUM,
    members={
        "LastModifiedAt": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="last_modified_at"),

            ],
        },

        "CreatedAt": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="created_at"),

            ],
        },

        "Weight": {
            "target": UNIT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="weight"),

            ],
        },

    }
)

LIST_CONTEXTS_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListContextsInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "count": {
            "target": INTEGER,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "prefix": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="prefix"),

            ],
        },

        "sort_on": {
            "target": CONTEXT_FILTER_SORT_ON,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="sort_on"),

            ],
        },

        "sort_by": {
            "target": SORT_BY,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="sort_by"),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="created_by"),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="last_modified_by"),

            ],
        },

        "plaintext": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="plaintext"),

            ],
        },

    }
)

CONTEXT_FULL = Schema.collection(
    id=ShapeID("io.superposition#ContextFull"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": CONDITION,
            "index": 1,
        },

        "override": {
            "target": OVERRIDES,
            "index": 2,
        },

        "override_id": {
            "target": STRING,
            "index": 3,
        },

        "weight": {
            "target": WEIGHT,
            "index": 4,
        },

        "description": {
            "target": STRING,
            "index": 5,
        },

        "change_reason": {
            "target": STRING,
            "index": 6,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 7,
        },

        "created_by": {
            "target": STRING,
            "index": 8,
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
        },

    }
)

LIST_CONTEXT_OUT = Schema.collection(
    id=ShapeID("io.superposition#ListContextOut"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": CONTEXT_FULL,
            "index": 0,
        },

    }
)

LIST_CONTEXTS_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListContextsOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "data": {
            "target": LIST_CONTEXT_OUT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

LIST_CONTEXTS = Schema(
    id=ShapeID("io.superposition#ListContexts"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/context/list",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

MOVE_CONTEXT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#MoveContextInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 4,
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

MOVE_CONTEXT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#MoveContextOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ContextActionResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "context_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "weight": {
            "target": WEIGHT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

MOVE_CONTEXT = Schema(
    id=ShapeID("io.superposition#MoveContext"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/context/move/{id}",
            })),

    ],

)

UPDATE_OVERRIDE_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateOverrideInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_tags": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-tags"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

        "request": {
            "target": UPDATE_CONTEXT_OVERRIDE_REQUEST,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpPayload")),

            ],
        },

    }
)

UPDATE_OVERRIDE_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateOverrideOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ContextFull"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": CONDITION,
            "index": 1,
        },

        "override": {
            "target": OVERRIDES,
            "index": 2,
        },

        "override_id": {
            "target": STRING,
            "index": 3,
        },

        "weight": {
            "target": WEIGHT,
            "index": 4,
        },

        "description": {
            "target": STRING,
            "index": 5,
        },

        "change_reason": {
            "target": STRING,
            "index": 6,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 7,
        },

        "created_by": {
            "target": STRING,
            "index": 8,
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
        },

    }
)

UPDATE_OVERRIDE = Schema(
    id=ShapeID("io.superposition#UpdateOverride"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/context/overrides",
            })),

    ],

)

WEIGHT_RECOMPUTE_INPUT = Schema.collection(
    id=ShapeID("io.superposition#WeightRecomputeInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_tags": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-config-tags"),
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

WEIGHT_RECOMPUTE_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#WeightRecomputeResponse"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
        },

        "condition": {
            "target": CONDITION,
            "index": 1,
        },

        "old_weight": {
            "target": WEIGHT,
            "index": 2,
        },

        "new_weight": {
            "target": WEIGHT,
            "index": 3,
        },

    }
)

WEIGHT_RECOMPUTE_RESPONSES = Schema.collection(
    id=ShapeID("io.superposition#WeightRecomputeResponses"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": WEIGHT_RECOMPUTE_RESPONSE,
            "index": 0,
        },

    }
)

WEIGHT_RECOMPUTE_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#WeightRecomputeOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "data": {
            "target": WEIGHT_RECOMPUTE_RESPONSES,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

WEIGHT_RECOMPUTE = Schema(
    id=ShapeID("io.superposition#WeightRecompute"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/context/weight/recompute",
            })),

    ],

)

CREATE_DEFAULT_CONFIG_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateDefaultConfigInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "key": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 5,
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 6,
        },

        "workspace_id": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_DEFAULT_CONFIG_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateDefaultConfigOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#DefaultConfigFull"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "key": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 5,
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 6,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_DEFAULT_CONFIG = Schema(
    id=ShapeID("io.superposition#CreateDefaultConfig"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/default-config",
            })),

    ],

)

DEPENDENCIES = Schema.collection(
    id=ShapeID("io.superposition#Dependencies"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
            "index": 0,
        },

    }
)

CREATE_DIMENSION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateDimensionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dimension": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "position": {
            "target": INTEGER,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 5,
        },

        "dependencies": {
            "target": DEPENDENCIES,
            "index": 6,
        },

        "description": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 9,
        },

    }
)

DEPENDENTS = Schema.collection(
    id=ShapeID("io.superposition#Dependents"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
            "index": 0,
        },

    }
)

CREATE_DIMENSION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateDimensionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#DimensionExt"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "dimension": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "position": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 3,
        },

        "description": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependencies": {
            "target": DEPENDENCIES,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependents": {
            "target": DEPENDENTS,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependency_graph": {
            "target": OBJECT,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 13,
        },

        "mandatory": {
            "target": BOOLEAN,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

CREATE_DIMENSION = Schema(
    id=ShapeID("io.superposition#CreateDimension"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/dimension",
            })),

    ],

)

CREATE_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#CreateExperimentRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 3,
        },

        "context": {
            "target": CONDITION,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 8,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 9,
        },

    }
)

CREATE_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

CREATE_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#CreateExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/experiments",
            })),

    ],

)

CREATE_EXPERIMENT_GROUP_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateExperimentGroupInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#CreateExperimentGroupRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
        },

    }
)

CREATE_EXPERIMENT_GROUP_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateExperimentGroupOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentGroupResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_hash": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_EXPERIMENT_GROUP = Schema(
    id=ShapeID("io.superposition#CreateExperimentGroup"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/experiment-groups",
            })),

    ],

)

FUNCTION_TYPES = Schema.collection(
    id=ShapeID("io.superposition#FunctionTypes"),
    shape_type=ShapeType.ENUM,
    members={
        "Validation": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="VALIDATION"),

            ],
        },

        "Autocomplete": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="AUTOCOMPLETE"),

            ],
        },

    }
)

CREATE_FUNCTION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateFunctionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#CreateFunctionRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "runtime_version": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_FUNCTION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateFunctionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#FunctionResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "function_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_code": {
            "target": STRING,
            "index": 1,
        },

        "draft_code": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_runtime_version": {
            "target": STRING,
            "index": 3,
        },

        "draft_runtime_version": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_at": {
            "target": DATE_TIME,
            "index": 5,
        },

        "draft_edited_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_by": {
            "target": STRING,
            "index": 7,
        },

        "draft_edited_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_FUNCTION = Schema(
    id=ShapeID("io.superposition#CreateFunction"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/function",
            })),

    ],

)

CREATE_ORGANISATION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateOrganisationInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#CreateOrganisationRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "country_code": {
            "target": STRING,
            "index": 0,
        },

        "contact_email": {
            "target": STRING,
            "index": 1,
        },

        "contact_phone": {
            "target": STRING,
            "index": 2,
        },

        "admin_email": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "sector": {
            "target": STRING,
            "index": 4,
        },

        "name": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

ORG_STATUS = Schema.collection(
    id=ShapeID("io.superposition#OrgStatus"),
    shape_type=ShapeType.ENUM,
    members={
        "Active": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="Active"),

            ],
        },

        "Inactive": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="Inactive"),

            ],
        },

        "PendingKyb": {
            "target": UNIT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="PendingKyb"),

            ],
        },

    }
)

CREATE_ORGANISATION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateOrganisationOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#OrganisationResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "country_code": {
            "target": STRING,
            "index": 2,
        },

        "contact_email": {
            "target": STRING,
            "index": 3,
        },

        "contact_phone": {
            "target": STRING,
            "index": 4,
        },

        "created_by": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "admin_email": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": ORG_STATUS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "sector": {
            "target": STRING,
            "index": 8,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_ORGANISATION = Schema(
    id=ShapeID("io.superposition#CreateOrganisation"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/superposition/organisations",
            })),

    ],

)

CREATE_TYPE_TEMPLATES_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateTypeTemplatesInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#CreateTypeTemplatesRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_schema": {
            "target": DOCUMENT,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_TYPE_TEMPLATES_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateTypeTemplatesOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#TypeTemplatesResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "type_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_schema": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_TYPE_TEMPLATES = Schema(
    id=ShapeID("io.superposition#CreateTypeTemplates"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/types",
            })),

    ],

)

EVENTS = Schema.collection(
    id=ShapeID("io.superposition#Events"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
            "index": 0,
        },

    }
)

HTTP_METHOD = Schema.collection(
    id=ShapeID("io.superposition#HttpMethod"),
    shape_type=ShapeType.ENUM,
    members={
        "GET": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="GET"),

            ],
        },

        "POST": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="POST"),

            ],
        },

        "PUT": {
            "target": UNIT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="PUT"),

            ],
        },

        "PATCH": {
            "target": UNIT,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="PATCH"),

            ],
        },

        "DELETE": {
            "target": UNIT,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="DELETE"),

            ],
        },

        "HEAD": {
            "target": UNIT,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="HEAD"),

            ],
        },

    }
)

VERSION = Schema.collection(
    id=ShapeID("io.superposition#Version"),
    shape_type=ShapeType.ENUM,
    members={
        "V1": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="V1"),

            ],
        },

    }
)

CREATE_WEBHOOK_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateWebhookInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "enabled": {
            "target": BOOLEAN,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "url": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "method": {
            "target": HTTP_METHOD,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "version": {
            "target": VERSION,
            "index": 7,
        },

        "custom_headers": {
            "target": OBJECT,
            "index": 8,
        },

        "events": {
            "target": EVENTS,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_WEBHOOK_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateWebhookOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#WebhookResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "enabled": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "url": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "method": {
            "target": HTTP_METHOD,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "version": {
            "target": VERSION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "custom_headers": {
            "target": OBJECT,
            "index": 6,
        },

        "events": {
            "target": EVENTS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "max_retries": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_triggered_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "change_reason": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_WEBHOOK = Schema(
    id=ShapeID("io.superposition#CreateWebhook"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/webhook",
            })),

    ],

)

WORKSPACE_STATUS = Schema.collection(
    id=ShapeID("io.superposition#WorkspaceStatus"),
    shape_type=ShapeType.ENUM,
    members={
        "ENABLED": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="ENABLED"),

            ],
        },

        "DISABLED": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="DISABLED"),

            ],
        },

    }
)

CREATE_WORKSPACE_INPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateWorkspaceInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#CreateWorkspaceRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "org_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_admin_email": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_status": {
            "target": WORKSPACE_STATUS,
            "index": 3,
        },

        "strict_mode": {
            "target": BOOLEAN,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 5,
        },

        "allow_experiment_self_approval": {
            "target": BOOLEAN,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_MANDATORY_DIMENSIONS = Schema.collection(
    id=ShapeID("io.superposition#ListMandatoryDimensions"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
            "index": 0,
        },

    }
)

CREATE_WORKSPACE_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#CreateWorkspaceOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#WorkspaceResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "workspace_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "organisation_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "organisation_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_schema_name": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_status": {
            "target": WORKSPACE_STATUS,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_admin_email": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_version": {
            "target": STRING,
            "index": 6,
        },

        "created_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "mandatory_dimensions": {
            "target": LIST_MANDATORY_DIMENSIONS,
            "index": 11,
        },

        "strict_mode": {
            "target": BOOLEAN,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 13,
        },

        "allow_experiment_self_approval": {
            "target": BOOLEAN,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

CREATE_WORKSPACE = Schema(
    id=ShapeID("io.superposition#CreateWorkspace"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "POST",
                "uri": "/workspaces",
            })),

    ],

)

DELETE_DEFAULT_CONFIG_INPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteDefaultConfigInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "key": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

DELETE_DEFAULT_CONFIG_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteDefaultConfigOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],

)

DELETE_DEFAULT_CONFIG = Schema(
    id=ShapeID("io.superposition#DeleteDefaultConfig"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "DELETE",
                "uri": "/default-config/{key}",
                "code": 201,
            })),

    ],

)

LIST_DEFAULT_CONFIGS_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListDefaultConfigsInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "count": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "workspace_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

DEFAULT_CONFIG_FULL = Schema.collection(
    id=ShapeID("io.superposition#DefaultConfigFull"),

    members={
        "key": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 5,
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 6,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_DEFAULT_CONFIG_OUT = Schema.collection(
    id=ShapeID("io.superposition#ListDefaultConfigOut"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": DEFAULT_CONFIG_FULL,
            "index": 0,
        },

    }
)

LIST_DEFAULT_CONFIGS_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListDefaultConfigsOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
        },

        "data": {
            "target": LIST_DEFAULT_CONFIG_OUT,
            "index": 2,
        },

    }
)

LIST_DEFAULT_CONFIGS = Schema(
    id=ShapeID("io.superposition#ListDefaultConfigs"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/default-config",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

UPDATE_DEFAULT_CONFIG_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateDefaultConfigInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "key": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": DOCUMENT,
            "index": 4,
        },

        "schema": {
            "target": DOCUMENT,
            "index": 5,
        },

        "function_name": {
            "target": STRING,
            "index": 6,
        },

        "description": {
            "target": STRING,
            "index": 7,
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 8,
        },

    }
)

UPDATE_DEFAULT_CONFIG_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateDefaultConfigOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#DefaultConfigFull"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "key": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 5,
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 6,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

UPDATE_DEFAULT_CONFIG = Schema(
    id=ShapeID("io.superposition#UpdateDefaultConfig"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/default-config/{key}",
            })),

    ],

)

DELETE_DIMENSION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteDimensionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dimension": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

DELETE_DIMENSION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteDimensionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],

)

DELETE_DIMENSION = Schema(
    id=ShapeID("io.superposition#DeleteDimension"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "DELETE",
                "uri": "/dimension/{dimension}",
                "code": 201,
            })),

    ],

)

DELETE_EXPERIMENT_GROUP_INPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteExperimentGroupInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

DELETE_EXPERIMENT_GROUP_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteExperimentGroupOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentGroupResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_hash": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

DELETE_EXPERIMENT_GROUP = Schema(
    id=ShapeID("io.superposition#DeleteExperimentGroup"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "DELETE",
                "uri": "/experiment-groups/{id}",
            })),

    ],

)

DELETE_FUNCTION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteFunctionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

DELETE_FUNCTION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteFunctionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],

)

FUNCTION_NOT_FOUND = Schema.collection(
    id=ShapeID("io.superposition#FunctionNotFound"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#error"), value="client"),
        Trait.new(id=ShapeID("smithy.api#httpError"), value=404),

    ],

)

DELETE_FUNCTION = Schema(
    id=ShapeID("io.superposition#DeleteFunction"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "DELETE",
                "uri": "/function/{function_name}",
            })),

    ],

)

DELETE_TYPE_TEMPLATES_INPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteTypeTemplatesInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

DELETE_TYPE_TEMPLATES_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#DeleteTypeTemplatesOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#TypeTemplatesResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "type_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_schema": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

TYPE_TEMPLATES_NOT_FOUND = Schema.collection(
    id=ShapeID("io.superposition#TypeTemplatesNotFound"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#error"), value="client"),
        Trait.new(id=ShapeID("smithy.api#httpError"), value=404),

    ],

)

DELETE_TYPE_TEMPLATES = Schema(
    id=ShapeID("io.superposition#DeleteTypeTemplates"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "DELETE",
                "uri": "/types/{type_name}",
            })),

    ],

)

GET_DIMENSION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetDimensionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dimension": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

GET_DIMENSION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetDimensionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#DimensionExt"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "dimension": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "position": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 3,
        },

        "description": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependencies": {
            "target": DEPENDENCIES,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependents": {
            "target": DEPENDENTS,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependency_graph": {
            "target": OBJECT,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 13,
        },

        "mandatory": {
            "target": BOOLEAN,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

GET_DIMENSION = Schema(
    id=ShapeID("io.superposition#GetDimension"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/dimension/{dimension}",
            })),

    ],

)

LIST_DIMENSIONS_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListDimensionsInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "count": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "workspace_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

DIMENSION_EXT = Schema.collection(
    id=ShapeID("io.superposition#DimensionExt"),

    members={
        "dimension": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "position": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 3,
        },

        "description": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependencies": {
            "target": DEPENDENCIES,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependents": {
            "target": DEPENDENTS,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependency_graph": {
            "target": OBJECT,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 13,
        },

        "mandatory": {
            "target": BOOLEAN,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

DIMENSION_EXT_LIST = Schema.collection(
    id=ShapeID("io.superposition#DimensionExtList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": DIMENSION_EXT,
            "index": 0,
        },

    }
)

LIST_DIMENSIONS_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListDimensionsOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
        },

        "data": {
            "target": DIMENSION_EXT_LIST,
            "index": 2,
        },

    }
)

LIST_DIMENSIONS = Schema(
    id=ShapeID("io.superposition#ListDimensions"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/dimension",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

UPDATE_DIMENSION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateDimensionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dimension": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 3,
        },

        "position": {
            "target": INTEGER,
            "index": 4,
        },

        "function_name": {
            "target": STRING,
            "index": 5,
        },

        "description": {
            "target": STRING,
            "index": 6,
        },

        "dependencies": {
            "target": DEPENDENCIES,
            "index": 7,
        },

        "change_reason": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 9,
        },

    }
)

UPDATE_DIMENSION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateDimensionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#DimensionExt"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "dimension": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "position": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "schema": {
            "target": DOCUMENT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 3,
        },

        "description": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependencies": {
            "target": DEPENDENCIES,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependents": {
            "target": DEPENDENTS,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "dependency_graph": {
            "target": OBJECT,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "autocomplete_function_name": {
            "target": STRING,
            "index": 13,
        },

        "mandatory": {
            "target": BOOLEAN,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),

            ],
        },

    }
)

UPDATE_DIMENSION = Schema(
    id=ShapeID("io.superposition#UpdateDimension"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/dimension/{dimension}",
            })),

    ],

)

DISCARD_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#DiscardExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

DISCARD_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#DiscardExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

DISCARD_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#DiscardExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiments/{id}/discard",
            })),

    ],

)

GET_EXPERIMENT_GROUP_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetExperimentGroupInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

GET_EXPERIMENT_GROUP_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetExperimentGroupOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentGroupResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_hash": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

GET_EXPERIMENT_GROUP = Schema(
    id=ShapeID("io.superposition#GetExperimentGroup"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/experiment-groups/{id}",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

EXPERIMENT_GROUP_SORT_ON = Schema.collection(
    id=ShapeID("io.superposition#ExperimentGroupSortOn"),
    shape_type=ShapeType.ENUM,
    members={
        "Name": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="name"),

            ],
        },

        "CreatedAt": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="created_at"),

            ],
        },

        "LastModifiedAt": {
            "target": UNIT,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="last_modified_at"),

            ],
        },

    }
)

LIST_EXPERIMENT_GROUPS_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListExperimentGroupsInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "page": {
            "target": LONG,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "count": {
            "target": LONG,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="name"),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="created_by"),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="last_modified_by"),

            ],
        },

        "sort_on": {
            "target": EXPERIMENT_GROUP_SORT_ON,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="sort_on"),

            ],
        },

        "sort_by": {
            "target": SORT_BY,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="sort_by"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

    }
)

EXPERIMENT_GROUP_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#ExperimentGroupResponse"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_hash": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

EXPERIMENT_GROUP_LIST = Schema.collection(
    id=ShapeID("io.superposition#ExperimentGroupList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": EXPERIMENT_GROUP_RESPONSE,
            "index": 0,
        },

    }
)

LIST_EXPERIMENT_GROUPS_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListExperimentGroupsOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ListExperimentGroupsResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": LONG,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "total_items": {
            "target": LONG,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "data": {
            "target": EXPERIMENT_GROUP_LIST,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_EXPERIMENT_GROUPS = Schema(
    id=ShapeID("io.superposition#ListExperimentGroups"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/experiment-groups",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

REMOVE_MEMBERS_FROM_GROUP_INPUT = Schema.collection(
    id=ShapeID("io.superposition#RemoveMembersFromGroupInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ModifyMembersToGroupRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

REMOVE_MEMBERS_FROM_GROUP_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#RemoveMembersFromGroupOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentGroupResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_hash": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

REMOVE_MEMBERS_FROM_GROUP = Schema(
    id=ShapeID("io.superposition#RemoveMembersFromGroup"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiment-groups/{id}/remove-members",
            })),

    ],

)

UPDATE_EXPERIMENT_GROUP_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateExperimentGroupInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#UpdateExperimentGroupRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 4,
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

    }
)

UPDATE_EXPERIMENT_GROUP_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateExperimentGroupOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentGroupResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context_hash": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#range"), value=MappingProxyType({
                        "min": 0,
                        "max": 100,
                    })),

            ],
        },

        "member_experiment_ids": {
            "target": STRING_LIST,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

UPDATE_EXPERIMENT_GROUP = Schema(
    id=ShapeID("io.superposition#UpdateExperimentGroup"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiment-groups/{id}",
            })),

    ],

)

EXPERIMENT_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#ExperimentResponse"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

EXPERIMENT_LIST = Schema.collection(
    id=ShapeID("io.superposition#ExperimentList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": EXPERIMENT_RESPONSE,
            "index": 0,
        },

    }
)

GET_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

GET_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

GET_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#GetExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/experiments/{id}",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

EXPERIMENT_SORT_ON = Schema.collection(
    id=ShapeID("io.superposition#ExperimentSortOn"),
    shape_type=ShapeType.ENUM,
    members={
        "LastModifiedAt": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="last_modified_at"),

            ],
        },

        "CreatedAt": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="created_at"),

            ],
        },

    }
)

LIST_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "page": {
            "target": LONG,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "count": {
            "target": LONG,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="status"),

            ],
        },

        "from_date": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="from_date"),

            ],
        },

        "to_date": {
            "target": DATE_TIME,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="to_date"),

            ],
        },

        "experiment_name": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="experiment_name"),

            ],
        },

        "experiment_ids": {
            "target": STRING,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="experiment_ids"),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="created_by"),

            ],
        },

        "sort_on": {
            "target": EXPERIMENT_SORT_ON,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="sort_on"),

            ],
        },

        "sort_by": {
            "target": SORT_BY,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="sort_by"),

            ],
        },

    }
)

LIST_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentListResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": LONG,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "total_items": {
            "target": LONG,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "data": {
            "target": EXPERIMENT_LIST,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#ListExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/experiments",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

PAUSE_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#PauseExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

PAUSE_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#PauseExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

PAUSE_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#PauseExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiments/{id}/pause",
            })),

    ],

)

RAMP_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#RampExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

RAMP_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#RampExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

RAMP_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#RampExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiments/{id}/ramp",
            })),

    ],

)

RESUME_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ResumeExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

RESUME_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ResumeExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

RESUME_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#ResumeExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/experiments/{id}/resume",
            })),

    ],

)

VARIANT_UPDATE_REQUEST = Schema.collection(
    id=ShapeID("io.superposition#VariantUpdateRequest"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "overrides": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_VARIANT_UPDATE_REQUEST = Schema.collection(
    id=ShapeID("io.superposition#ListVariantUpdateRequest"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": VARIANT_UPDATE_REQUEST,
            "index": 0,
        },

    }
)

UPDATE_OVERRIDES_EXPERIMENT_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateOverridesExperimentInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#UpdateOverrideRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "id": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "variant_list": {
            "target": LIST_VARIANT_UPDATE_REQUEST,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 4,
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 6,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 7,
        },

    }
)

UPDATE_OVERRIDES_EXPERIMENT_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateOverridesExperimentOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#ExperimentResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified": {
            "target": DATE_TIME,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "experiment_type": {
            "target": EXPERIMENT_TYPE,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "override_keys": {
            "target": LIST_OVERRIDE_KEYS,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": EXPERIMENT_STATUS_TYPE,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "traffic_percentage": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "context": {
            "target": CONDITION,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "variants": {
            "target": LIST_VARIANT,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "chosen_variant": {
            "target": STRING,
            "index": 12,
        },

        "description": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "started_at": {
            "target": DATE_TIME,
            "index": 15,
        },

        "started_by": {
            "target": STRING,
            "index": 16,
        },

        "metrics_url": {
            "target": STRING,
            "index": 17,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 18,
        },

        "experiment_group_id": {
            "target": STRING,
            "index": 19,
        },

    }
)

UPDATE_OVERRIDES_EXPERIMENT = Schema(
    id=ShapeID("io.superposition#UpdateOverridesExperiment"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/experiments/{id}/overrides",
            })),

    ],

)

GET_FUNCTION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetFunctionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

GET_FUNCTION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetFunctionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#FunctionResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "function_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_code": {
            "target": STRING,
            "index": 1,
        },

        "draft_code": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_runtime_version": {
            "target": STRING,
            "index": 3,
        },

        "draft_runtime_version": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_at": {
            "target": DATE_TIME,
            "index": 5,
        },

        "draft_edited_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_by": {
            "target": STRING,
            "index": 7,
        },

        "draft_edited_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

GET_FUNCTION = Schema(
    id=ShapeID("io.superposition#GetFunction"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/function/{function_name}",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

LIST_FUNCTION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListFunctionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "count": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "workspace_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

FUNCTION_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#FunctionResponse"),

    members={
        "function_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_code": {
            "target": STRING,
            "index": 1,
        },

        "draft_code": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_runtime_version": {
            "target": STRING,
            "index": 3,
        },

        "draft_runtime_version": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_at": {
            "target": DATE_TIME,
            "index": 5,
        },

        "draft_edited_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_by": {
            "target": STRING,
            "index": 7,
        },

        "draft_edited_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

FUNCTION_LIST_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#FunctionListResponse"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": FUNCTION_RESPONSE,
            "index": 0,
        },

    }
)

LIST_FUNCTION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListFunctionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
        },

        "data": {
            "target": FUNCTION_LIST_RESPONSE,
            "index": 2,
        },

    }
)

LIST_FUNCTION = Schema(
    id=ShapeID("io.superposition#ListFunction"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/function",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

PUBLISH_INPUT = Schema.collection(
    id=ShapeID("io.superposition#PublishInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

PUBLISH_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#PublishOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#FunctionResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "function_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_code": {
            "target": STRING,
            "index": 1,
        },

        "draft_code": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_runtime_version": {
            "target": STRING,
            "index": 3,
        },

        "draft_runtime_version": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_at": {
            "target": DATE_TIME,
            "index": 5,
        },

        "draft_edited_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_by": {
            "target": STRING,
            "index": 7,
        },

        "draft_edited_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

PUBLISH = Schema(
    id=ShapeID("io.superposition#Publish"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/function/{function_name}/publish",
            })),

    ],

)

VALIDATE_FUNCTION_REQUEST = Schema.collection(
    id=ShapeID("io.superposition#ValidateFunctionRequest"),

    members={
        "key": {
            "target": STRING,
            "index": 0,
        },

        "value": {
            "target": DOCUMENT,
            "index": 1,
        },

    }
)

FUNCTION_EXECUTION_REQUEST = Schema.collection(
    id=ShapeID("io.superposition#FunctionExecutionRequest"),
    shape_type=ShapeType.UNION,
    members={
        "ValidateFunctionRequest": {
            "target": VALIDATE_FUNCTION_REQUEST,
            "index": 0,
        },

        "AutocompleteFunctionRequest": {
            "target": AUTOCOMPLETE_FUNCTION_REQUEST,
            "index": 1,
        },

    }
)

STAGE = Schema.collection(
    id=ShapeID("io.superposition#Stage"),
    shape_type=ShapeType.ENUM,
    members={
        "DRAFT": {
            "target": UNIT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="draft"),

            ],
        },

        "PUBLISHED": {
            "target": UNIT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#enumValue"), value="published"),

            ],
        },

    }
)

TEST_INPUT = Schema.collection(
    id=ShapeID("io.superposition#TestInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "stage": {
            "target": STAGE,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "request": {
            "target": FUNCTION_EXECUTION_REQUEST,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpPayload")),

            ],
        },

    }
)

TEST_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#TestOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#FunctionExecutionResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "fn_output": {
            "target": DOCUMENT,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "stdout": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

TEST = Schema(
    id=ShapeID("io.superposition#Test"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/function/{function_name}/{stage}/test",
            })),

    ],

)

UPDATE_FUNCTION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateFunctionInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#UpdateFunctionRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
        },

        "change_reason": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "runtime_version": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#notProperty")),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 7,
        },

    }
)

UPDATE_FUNCTION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateFunctionOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#FunctionResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "function_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_code": {
            "target": STRING,
            "index": 1,
        },

        "draft_code": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_runtime_version": {
            "target": STRING,
            "index": 3,
        },

        "draft_runtime_version": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_at": {
            "target": DATE_TIME,
            "index": 5,
        },

        "draft_edited_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "published_by": {
            "target": STRING,
            "index": 7,
        },

        "draft_edited_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "function_type": {
            "target": FUNCTION_TYPES,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

UPDATE_FUNCTION = Schema(
    id=ShapeID("io.superposition#UpdateFunction"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/function/{function_name}",
            })),

    ],

)

GET_ORGANISATION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetOrganisationInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

GET_ORGANISATION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetOrganisationOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#OrganisationResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "country_code": {
            "target": STRING,
            "index": 2,
        },

        "contact_email": {
            "target": STRING,
            "index": 3,
        },

        "contact_phone": {
            "target": STRING,
            "index": 4,
        },

        "created_by": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "admin_email": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": ORG_STATUS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "sector": {
            "target": STRING,
            "index": 8,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

ORGANISATION_NOT_FOUND = Schema.collection(
    id=ShapeID("io.superposition#OrganisationNotFound"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#error"), value="client"),
        Trait.new(id=ShapeID("smithy.api#httpError"), value=404),

    ],

)

GET_ORGANISATION = Schema(
    id=ShapeID("io.superposition#GetOrganisation"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/superposition/organisations/{id}",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

GET_TYPE_TEMPLATES_LIST_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetTypeTemplatesListInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "count": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "workspace_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

TYPE_TEMPLATES_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#TypeTemplatesResponse"),

    members={
        "type_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_schema": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

TYPE_TEMPLATES_LIST = Schema.collection(
    id=ShapeID("io.superposition#TypeTemplatesList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": TYPE_TEMPLATES_RESPONSE,
            "index": 0,
        },

    }
)

GET_TYPE_TEMPLATES_LIST_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetTypeTemplatesListOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
        },

        "data": {
            "target": TYPE_TEMPLATES_LIST,
            "index": 2,
        },

    }
)

GET_TYPE_TEMPLATES_LIST = Schema(
    id=ShapeID("io.superposition#GetTypeTemplatesList"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/types",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

GET_WEBHOOK_INPUT = Schema.collection(
    id=ShapeID("io.superposition#GetWebhookInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

    }
)

GET_WEBHOOK_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#GetWebhookOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#WebhookResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "enabled": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "url": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "method": {
            "target": HTTP_METHOD,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "version": {
            "target": VERSION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "custom_headers": {
            "target": OBJECT,
            "index": 6,
        },

        "events": {
            "target": EVENTS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "max_retries": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_triggered_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "change_reason": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

GET_WEBHOOK = Schema(
    id=ShapeID("io.superposition#GetWebhook"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/webhook/{name}",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

LIST_ORGANISATION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListOrganisationInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "count": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

    }
)

ORGANISATION_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#OrganisationResponse"),

    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "country_code": {
            "target": STRING,
            "index": 2,
        },

        "contact_email": {
            "target": STRING,
            "index": 3,
        },

        "contact_phone": {
            "target": STRING,
            "index": 4,
        },

        "created_by": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "admin_email": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": ORG_STATUS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "sector": {
            "target": STRING,
            "index": 8,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

ORGANISATION_LIST = Schema.collection(
    id=ShapeID("io.superposition#OrganisationList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": ORGANISATION_RESPONSE,
            "index": 0,
        },

    }
)

LIST_ORGANISATION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListOrganisationOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": INTEGER,
            "index": 0,
        },

        "total_items": {
            "target": INTEGER,
            "index": 1,
        },

        "data": {
            "target": ORGANISATION_LIST,
            "index": 2,
        },

    }
)

LIST_ORGANISATION = Schema(
    id=ShapeID("io.superposition#ListOrganisation"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/superposition/organisations",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

LIST_WEBHOOK_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListWebhookInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "count": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "workspace_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

WEBHOOK_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#WebhookResponse"),

    members={
        "name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "enabled": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "url": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "method": {
            "target": HTTP_METHOD,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "version": {
            "target": VERSION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "custom_headers": {
            "target": OBJECT,
            "index": 6,
        },

        "events": {
            "target": EVENTS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "max_retries": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_triggered_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "change_reason": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

WEBHOOK_LIST = Schema.collection(
    id=ShapeID("io.superposition#WebhookList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": WEBHOOK_RESPONSE,
            "index": 0,
        },

    }
)

LIST_WEBHOOK_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListWebhookOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#WebhookListResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": LONG,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "total_items": {
            "target": LONG,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "data": {
            "target": WEBHOOK_LIST,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_WEBHOOK = Schema(
    id=ShapeID("io.superposition#ListWebhook"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/webhook",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

LIST_WORKSPACE_INPUT = Schema.collection(
    id=ShapeID("io.superposition#ListWorkspaceInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "count": {
            "target": INTEGER,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="count"),

            ],
        },

        "page": {
            "target": INTEGER,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="page"),

            ],
        },

        "all": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpQuery"), value="all"),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

WORKSPACE_RESPONSE = Schema.collection(
    id=ShapeID("io.superposition#WorkspaceResponse"),

    members={
        "workspace_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "organisation_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "organisation_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_schema_name": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_status": {
            "target": WORKSPACE_STATUS,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_admin_email": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_version": {
            "target": STRING,
            "index": 6,
        },

        "created_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "mandatory_dimensions": {
            "target": LIST_MANDATORY_DIMENSIONS,
            "index": 11,
        },

        "strict_mode": {
            "target": BOOLEAN,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 13,
        },

        "allow_experiment_self_approval": {
            "target": BOOLEAN,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

WORKSPACE_LIST = Schema.collection(
    id=ShapeID("io.superposition#WorkspaceList"),
    shape_type=ShapeType.LIST,
    members={
        "member": {
            "target": WORKSPACE_RESPONSE,
            "index": 0,
        },

    }
)

LIST_WORKSPACE_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#ListWorkspaceOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#WorkspaceListResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "total_pages": {
            "target": LONG,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "total_items": {
            "target": LONG,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "data": {
            "target": WORKSPACE_LIST,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

LIST_WORKSPACE = Schema(
    id=ShapeID("io.superposition#ListWorkspace"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "GET",
                "uri": "/workspaces",
            })),
        Trait.new(id=ShapeID("smithy.api#readonly")),

    ],

)

UPDATE_ORGANISATION_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateOrganisationInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#UpdateOrganisationRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "country_code": {
            "target": STRING,
            "index": 0,
        },

        "contact_email": {
            "target": STRING,
            "index": 1,
        },

        "contact_phone": {
            "target": STRING,
            "index": 2,
        },

        "admin_email": {
            "target": STRING,
            "index": 3,
        },

        "sector": {
            "target": STRING,
            "index": 4,
        },

        "id": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "status": {
            "target": ORG_STATUS,
            "index": 6,
        },

    }
)

UPDATE_ORGANISATION_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateOrganisationOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#OrganisationResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "country_code": {
            "target": STRING,
            "index": 2,
        },

        "contact_email": {
            "target": STRING,
            "index": 3,
        },

        "contact_phone": {
            "target": STRING,
            "index": 4,
        },

        "created_by": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "admin_email": {
            "target": STRING,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "status": {
            "target": ORG_STATUS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "sector": {
            "target": STRING,
            "index": 8,
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "updated_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

UPDATE_ORGANISATION = Schema(
    id=ShapeID("io.superposition#UpdateOrganisation"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/superposition/organisations/{id}",
            })),

    ],

)

UPDATE_TYPE_TEMPLATES_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateTypeTemplatesInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#UpdateTypeTemplatesRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "type_schema": {
            "target": DOCUMENT,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 4,
        },

        "change_reason": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

UPDATE_TYPE_TEMPLATES_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateTypeTemplatesOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#TypeTemplatesResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "type_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "type_schema": {
            "target": DOCUMENT,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

UPDATE_TYPE_TEMPLATES = Schema(
    id=ShapeID("io.superposition#UpdateTypeTemplates"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/types/{type_name}",
            })),

    ],

)

UPDATE_WEBHOOK_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateWebhookInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "workspace_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-tenant"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "org_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "enabled": {
            "target": BOOLEAN,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "url": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "method": {
            "target": HTTP_METHOD,
            "index": 6,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "version": {
            "target": VERSION,
            "index": 7,
        },

        "custom_headers": {
            "target": OBJECT,
            "index": 8,
        },

        "events": {
            "target": EVENTS,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "change_reason": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

UPDATE_WEBHOOK_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateWebhookOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#WebhookResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "description": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "enabled": {
            "target": BOOLEAN,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "url": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "method": {
            "target": HTTP_METHOD,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "version": {
            "target": VERSION,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "custom_headers": {
            "target": OBJECT,
            "index": 6,
        },

        "events": {
            "target": EVENTS,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "max_retries": {
            "target": INTEGER,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_triggered_at": {
            "target": DATE_TIME,
            "index": 9,
        },

        "change_reason": {
            "target": STRING,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_by": {
            "target": STRING,
            "index": 11,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 13,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

WEBHOOK_NOT_FOUND = Schema.collection(
    id=ShapeID("io.superposition#WebhookNotFound"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#error"), value="client"),
        Trait.new(id=ShapeID("smithy.api#httpError"), value=404),

    ],

)

UPDATE_WEBHOOK = Schema(
    id=ShapeID("io.superposition#UpdateWebhook"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PATCH",
                "uri": "/webhook/{name}",
            })),

    ],

)

UPDATE_WORKSPACE_INPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateWorkspaceInput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#UpdateWorkspaceRequest"),
        Trait.new(id=ShapeID("smithy.api#input")),

    ],
    members={
        "org_id": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#default"), value="juspay"),
                Trait.new(id=ShapeID("smithy.api#httpHeader"), value="x-org-id"),
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_name": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),
                Trait.new(id=ShapeID("smithy.api#httpLabel")),

            ],
        },

        "workspace_admin_email": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_version": {
            "target": STRING,
            "index": 3,
        },

        "mandatory_dimensions": {
            "target": LIST_MANDATORY_DIMENSIONS,
            "index": 4,
        },

        "workspace_status": {
            "target": WORKSPACE_STATUS,
            "index": 5,
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 6,
        },

        "allow_experiment_self_approval": {
            "target": BOOLEAN,
            "index": 7,
        },

    }
)

UPDATE_WORKSPACE_OUTPUT = Schema.collection(
    id=ShapeID("io.superposition#UpdateWorkspaceOutput"),

    traits=[
        Trait.new(id=ShapeID("smithy.synthetic#originalShapeId"), value="io.superposition#WorkspaceResponse"),
        Trait.new(id=ShapeID("smithy.api#output")),

    ],
    members={
        "workspace_name": {
            "target": STRING,
            "index": 0,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "organisation_id": {
            "target": STRING,
            "index": 1,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "organisation_name": {
            "target": STRING,
            "index": 2,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_schema_name": {
            "target": STRING,
            "index": 3,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_status": {
            "target": WORKSPACE_STATUS,
            "index": 4,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "workspace_admin_email": {
            "target": STRING,
            "index": 5,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "config_version": {
            "target": STRING,
            "index": 6,
        },

        "created_by": {
            "target": STRING,
            "index": 7,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_by": {
            "target": STRING,
            "index": 8,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "last_modified_at": {
            "target": DATE_TIME,
            "index": 9,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "created_at": {
            "target": DATE_TIME,
            "index": 10,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "mandatory_dimensions": {
            "target": LIST_MANDATORY_DIMENSIONS,
            "index": 11,
        },

        "strict_mode": {
            "target": BOOLEAN,
            "index": 12,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

        "metrics": {
            "target": DOCUMENT,
            "index": 13,
        },

        "allow_experiment_self_approval": {
            "target": BOOLEAN,
            "index": 14,
            "traits": [
                Trait.new(id=ShapeID("smithy.api#required")),

            ],
        },

    }
)

WORKSPACE_NOT_FOUND = Schema.collection(
    id=ShapeID("io.superposition#WorkspaceNotFound"),

    traits=[
        Trait.new(id=ShapeID("smithy.api#error"), value="client"),
        Trait.new(id=ShapeID("smithy.api#httpError"), value=404),

    ],

)

UPDATE_WORKSPACE = Schema(
    id=ShapeID("io.superposition#UpdateWorkspace"),
    shape_type=ShapeType.OPERATION,
    traits=[
        Trait.new(id=ShapeID("smithy.api#idempotent")),
        Trait.new(id=ShapeID("smithy.api#http"), value=MappingProxyType({
                "method": "PUT",
                "uri": "/workspaces/{workspace_name}",
            })),

    ],

)

SUPERPOSITION = Schema(
    id=ShapeID("io.superposition#Superposition"),
    shape_type=ShapeType.SERVICE,
    traits=[
        Trait.new(id=ShapeID("smithy.api#title"), value="Superposition"),
        Trait.new(id=ShapeID("aws.protocols#restJson1")),
        Trait.new(id=ShapeID("smithy.api#httpBearerAuth")),

    ],

)
