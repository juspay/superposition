name: Build and distribute clients for multiple platforms

on: workflow_dispatch

jobs:
  generate-builds:
    strategy:
      max-parallel: 5
      matrix:
        platform:
            - os: ubuntu-latest
              target: x86_64-unknown-linux-gnu
              cac_bin_name: libcac_client.so
              exp_bin_name: libexperimentation_client.so
              cac_zip_name: superposition_cac_client-x86_64-unknown-linux-gnu.zip
              exp_zip_name: superposition_experimentation_client-x86_64-unknown-linux-gnu.zip
            - os: macos-latest
              target: x86_64-apple-darwin
              cac_bin_name: libcac_client.dylib
              exp_bin_name: libexperimentation_client.dylib
              cac_zip_name: superposition_cac_client-x86_64-apple-darwin.zip
              exp_zip_name: superposition_experimentation_client-x86_64-apple-darwin.zip
            - os: macos-latest
              target: aarch64-apple-darwin
              cac_bin_name: libcac_client.dylib
              exp_bin_name: libexperimentation_client.dylib
              cac_zip_name: superposition_cac_client-aarch64-apple-darwin.zip
              exp_zip_name: superposition_experimentation_client-aarch64-apple-darwin.zip
            - os: windows-latest
              target: x86_64-pc-windows-msvc
              cac_bin_name: cac_client.dll
              exp_bin_name: experimentation_client.dll
              cac_zip_name: superposition_cac_client-x86_64-pc-windows-msvc.zip
              exp_zip_name: superposition_experimentation_client-x86_64-pc-windows-msvc.zip
    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: 1.78.0
            targets: ${{ matrix.platform.target }}
            components: rustfmt, clippy

      - name: Build and package for ${{ matrix.platform.os }}
        if: matrix.platform.os != 'windows-latest'
        run: |
          cargo build --package cac_client --release --target ${{ matrix.platform.target }}
          cargo build --package experimentation_client --release --target ${{ matrix.platform.target }}
          zip -r ${{ matrix.platform.cac_zip_name }} target/${{ matrix.platform.target }}/release/${{ matrix.platform.cac_bin_name }} headers/libcac_client.h
          zip -r ${{ matrix.platform.exp_zip_name }} target/${{ matrix.platform.target }}/release/${{ matrix.platform.exp_bin_name }} headers/libexperimentation_client.h

      - name: Build and package for ${{ matrix.platform.os }} on windows
        if: matrix.platform.os == 'windows-latest'
        run: |
          cargo build --package cac_client --release --target ${{ matrix.platform.target }}
          cargo build --package experimentation_client --release --target ${{ matrix.platform.target }}
          Compress-Archive -Path "target\${{ matrix.platform.target }}\release\${{ matrix.platform.cac_bin_name }}","headers\libcac_client.h" -DestinationPath ${{ matrix.platform.cac_zip_name }}
          Compress-Archive -Path "target\${{ matrix.platform.target }}\release\${{ matrix.platform.exp_bin_name }}","headers\libexperimentation_client.h" -DestinationPath ${{ matrix.platform.exp_zip_name }}

      - name: Upload cac artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.cac_zip_name }}
          path: ${{ matrix.platform.cac_zip_name }}

      - name: Upload experimentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.exp_zip_name }}
          path: ${{ matrix.platform.exp_zip_name }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.platform.exp_zip_name }}
            ${{ matrix.platform.cac_zip_name }}
