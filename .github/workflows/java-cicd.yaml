name: Java CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    # needs: build-and-test
    # if: github.event_name == 'workflow_dispatch'
    env:
      JRELEASER_GPG_SECRET_KEY: ${{ secrets.SONATYPE_MAVEN_SIGNING_KEY }}
      JRELEASER_GPG_PASSPHRASE: ${{ secrets.SONATYPE_MAVEN_SIGNING_KEY_PASSWORD }}
      JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.SONATYPE_MAVEN_USERNAME }}
      JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.SONATYPE_MAVEN_PASSWORD }}
    defaults:
      run:
        working-directory: clients/java

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Publish
      run: ./gradlew clean publish

    - name: Check required secrets
      run: |
        if [[ -z "$JRELEASER_GPG_SECRET_KEY" ]]; then
          echo "❌ JRELEASER_GPG_SECRET_KEY is not set"
          exit 1
        fi
        if [[ -z "$JRELEASER_GPG_PASSPHRASE" ]]; then
          echo "❌ JRELEASER_GPG_PASSPHRASE is not set"
          exit 1
        fi
        if [[ -z "$JRELEASER_MAVENCENTRAL_USERNAME" ]]; then
          echo "❌ JRELEASER_MAVENCENTRAL_USERNAME is not set"
          exit 1
        fi
        if [[ -z "$JRELEASER_MAVENCENTRAL_TOKEN" ]]; then
          echo "❌ JRELEASER_MAVENCENTRAL_TOKEN is not set"
          exit 1
        fi
        echo "✅ All required secrets are set"

    - name: Deploy to Sonatype
      run: ./gradlew jreleaserDeploy
        # GRADLE_OPTS: >-
        #   -DsonatypeUsername=${{ secrets.SONATYPE_MAVEN_USERNAME }}
        #   -DsonatypePassword=${{ secrets.SONATYPE_MAVEN_PASSWORD }}
        #   -DsigningKey=${{ secrets.SONATYPE_MAVEN_SIGNING_KEY }}
        #   -DsigningPassword=${{ secrets.SONATYPE_MAVEN_SIGNING_KEY_PASSWORD }}

  # build-and-test:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: clients/java

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   - name: Make gradlew executable
  #     run: chmod +x gradlew

  #   - name: Run Gradle assemble
  #     run: ./gradlew assemble

  #   ## This requires more setup. Specifically, we need the server to be up w/
  #   ## some dummy data.
  #   # - name: Run tests
  #   #   run: ./gradlew test

  #   - name: Upload build artifacts
  #     if: failure()
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: build-reports
  #       path: |
  #         build/reports/
  #         build/test-results/
  #       retention-days: 7
