/*
 * Superposition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-03-05
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateDefaultConfigRequestContent {
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "value", deserialize_with = "Option::deserialize")]
    pub value: Option<serde_json::Value>,
    #[serde(rename = "schema", deserialize_with = "Option::deserialize")]
    pub schema: Option<serde_json::Value>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "change_reason")]
    pub change_reason: String,
    /// Optional
    #[serde(rename = "function_name", skip_serializing_if = "Option::is_none")]
    pub function_name: Option<String>,
}

impl CreateDefaultConfigRequestContent {
    pub fn new(key: String, value: Option<serde_json::Value>, schema: Option<serde_json::Value>, description: String, change_reason: String) -> CreateDefaultConfigRequestContent {
        CreateDefaultConfigRequestContent {
            key,
            value,
            schema,
            description,
            change_reason,
            function_name: None,
        }
    }
}

