{
    "openapi": "3.0.2",
    "info": {
        "title": "Superposition",
        "version": "2025-03-05"
    },
    "paths": {
        "/audit": {
            "get": {
                "description": "Retrieves a paginated list of audit logs with support for filtering by date range, table names, actions, and usernames for compliance and monitoring purposes.",
                "operationId": "ListAuditLogs",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "table",
                        "in": "query",
                        "description": "Comma serparated list of tables.",
                        "schema": {
                            "type": "string",
                            "description": "Comma serparated list of tables."
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Comma serparated list of actions.",
                        "schema": {
                            "type": "string",
                            "description": "Comma serparated list of actions."
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListAuditLogs 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAuditLogsResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config": {
            "post": {
                "description": "Retrieves config data with context evaluation, including applicable contexts, overrides, and default values based on provided conditions.",
                "operationId": "GetConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetConfigRequestContent"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "prefix",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetConfig 200 response",
                        "headers": {
                            "last-modified": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-audit-id": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-config-version": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConfigResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/fast": {
            "get": {
                "description": "Retrieves the latest config with no processing for high-performance access.",
                "operationId": "GetConfigFast",
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetConfigFast 200 response",
                        "headers": {
                            "last-modified": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-audit-id": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-config-version": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConfigFastOutputPayload"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/resolve": {
            "post": {
                "description": "Resolves and merges config values based on context conditions, applying overrides and merge strategies to produce the final configuration.",
                "operationId": "GetResolvedConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetResolvedConfigRequestContent"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "prefix",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_reasoning",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-merge-strategy",
                        "in": "header",
                        "schema": {
                            "$ref": "#/components/schemas/MergeStrategy"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetResolvedConfig 200 response",
                        "headers": {
                            "last-modified": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-audit-id": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-config-version": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetResolvedConfigOutputPayload"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/config/versions": {
            "get": {
                "description": "Retrieves a paginated list of config versions with their metadata, hash values, and creation timestamps for audit and rollback purposes.",
                "operationId": "ListVersions",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListVersions 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListVersionsResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context": {
            "put": {
                "description": "Creates a new context with specified conditions and overrides. Contexts define conditional rules for config management.",
                "operationId": "CreateContext",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContextRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-config-tags",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateContext 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateContextResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context/bulk-operations": {
            "put": {
                "description": "Executes multiple context operations (PUT, REPLACE, DELETE, MOVE) in a single atomic transaction for efficient batch processing.",
                "operationId": "BulkOperation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkOperationReq"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-config-tags",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BulkOperation 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkOperationOut"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context/get": {
            "post": {
                "description": "Retrieves context information by matching against provided conditions. Used to find contexts that would apply to specific scenarios.",
                "operationId": "GetContextFromCondition",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetContextFromConditionInputPayload"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetContextFromCondition 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetContextFromConditionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context/list": {
            "get": {
                "description": "Retrieves a paginated list of contexts with support for filtering by creation date, modification date, weight, and other criteria.",
                "operationId": "ListContexts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_on",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/ContextFilterSortOn"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort order enumeration for list operations.",
                        "schema": {
                            "$ref": "#/components/schemas/SortBy"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_modified_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plaintext",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dimension_match_strategy",
                        "in": "query",
                        "description": "Strategy to follow while filter items based on the context",
                        "schema": {
                            "$ref": "#/components/schemas/DimensionMatchStrategy"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListContexts 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListContextsResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context/move/{id}": {
            "put": {
                "description": "Updates the condition of the mentioned context, if a context with the new condition already exists, it merges the override and effectively deleting the old context",
                "operationId": "MoveContext",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveContextRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MoveContext 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MoveContextResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context/overrides": {
            "put": {
                "description": "Updates the overrides for an existing context. Allows modification of override values while maintaining the context's conditions.",
                "operationId": "UpdateOverride",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContextOverrideRequest"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-config-tags",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateOverride 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOverrideResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context/weight/recompute": {
            "put": {
                "description": "Recalculates and updates the priority weights for all contexts in the workspace based on their dimensions.",
                "operationId": "WeightRecompute",
                "parameters": [
                    {
                        "name": "x-config-tags",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WeightRecompute 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeightRecomputeResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/context/{id}": {
            "delete": {
                "description": "Permanently removes a context from the workspace. This operation cannot be undone and will affect config resolution.",
                "operationId": "DeleteContext",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-config-tags",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "DeleteContext 201 response"
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieves detailed information about a specific context by its unique identifier, including conditions, overrides, and metadata.",
                "operationId": "GetContext",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetContext 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetContextResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/default-config": {
            "get": {
                "description": "Retrieves a paginated list of all default config entries in the workspace, including their values, schemas, and metadata.",
                "operationId": "ListDefaultConfigs",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListDefaultConfigs 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDefaultConfigsResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new default config entry with specified key, value, schema, and metadata. Default configs serve as fallback values when no specific context matches.",
                "operationId": "CreateDefaultConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDefaultConfigRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateDefaultConfig 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDefaultConfigResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/default-config/{key}": {
            "delete": {
                "description": "Permanently removes a default config entry from the workspace. This operation cannot be performed if it affects config resolution for contexts that rely on this fallback value.",
                "operationId": "DeleteDefaultConfig",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "DeleteDefaultConfig 201 response"
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing default config entry. Allows modification of value, schema, function mappings, and description while preserving the key identifier.",
                "operationId": "UpdateDefaultConfig",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDefaultConfigRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateDefaultConfig 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDefaultConfigResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dimension": {
            "get": {
                "description": "Retrieves a paginated list of all dimensions in the workspace. Dimensions are returned with their details and metadata.",
                "operationId": "ListDimensions",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListDimensions 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDimensionsResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new dimension with the specified json schema. Dimensions define categorical attributes used for context-based config management.",
                "operationId": "CreateDimension",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDimensionRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateDimension 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDimensionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dimension/{dimension}": {
            "delete": {
                "description": "Permanently removes a dimension from the workspace. This operation will fail if the dimension has active dependencies or is referenced by existing configurations.",
                "operationId": "DeleteDimension",
                "parameters": [
                    {
                        "name": "dimension",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "DeleteDimension 201 response"
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieves detailed information about a specific dimension, including its schema, dependencies, and configuration metadata.",
                "operationId": "GetDimension",
                "parameters": [
                    {
                        "name": "dimension",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetDimension 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDimensionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing dimension's configuration. Allows modification of schema, position, function mappings, and other properties while maintaining dependency relationships.",
                "operationId": "UpdateDimension",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDimensionRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "dimension",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateDimension 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateDimensionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiment-groups": {
            "get": {
                "description": "Lists experiment groups, with support for filtering and pagination.",
                "operationId": "ListExperimentGroups",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by experiment group name (exact match or substring, depending on backend implementation).",
                        "schema": {
                            "type": "string",
                            "description": "Filter by experiment group name (exact match or substring, depending on backend implementation)."
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "Filter by the user who created the experiment group.",
                        "schema": {
                            "type": "string",
                            "description": "Filter by the user who created the experiment group."
                        }
                    },
                    {
                        "name": "last_modified_by",
                        "in": "query",
                        "description": "Filter by the user who last modified the experiment group.",
                        "schema": {
                            "type": "string",
                            "description": "Filter by the user who last modified the experiment group."
                        }
                    },
                    {
                        "name": "sort_on",
                        "in": "query",
                        "description": "Field to sort the results by.",
                        "schema": {
                            "$ref": "#/components/schemas/ExperimentGroupSortOn"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort order (ascending or descending).",
                        "schema": {
                            "$ref": "#/components/schemas/SortBy"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If true, returns all experiment groups, ignoring pagination parameters page and count.",
                        "schema": {
                            "type": "boolean",
                            "description": "If true, returns all experiment groups, ignoring pagination parameters page and count."
                        }
                    },
                    {
                        "name": "group_type",
                        "in": "query",
                        "description": "Filter by the type of group (USER_CREATED or SYSTEM_GENERATED).",
                        "schema": {
                            "$ref": "#/components/schemas/GroupType"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListExperimentGroups 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListExperimentGroupsResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new experiment group.",
                "operationId": "CreateExperimentGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExperimentGroupRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateExperimentGroup 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateExperimentGroupResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiment-groups/{id}": {
            "delete": {
                "description": "Deletes an experiment group.",
                "operationId": "DeleteExperimentGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DeleteExperimentGroup 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteExperimentGroupResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieves an existing experiment group by its ID.",
                "operationId": "GetExperimentGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetExperimentGroup 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetExperimentGroupResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an existing experiment group. Allows partial updates to specified fields.",
                "operationId": "UpdateExperimentGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExperimentGroupRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateExperimentGroup 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateExperimentGroupResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiment-groups/{id}/add-members": {
            "patch": {
                "description": "Adds members to an existing experiment group.",
                "operationId": "AddMembersToGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddMembersToGroupRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AddMembersToGroup 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddMembersToGroupResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiment-groups/{id}/remove-members": {
            "patch": {
                "description": "Removes members from an existing experiment group.",
                "operationId": "RemoveMembersFromGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveMembersFromGroupRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RemoveMembersFromGroup 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoveMembersFromGroupResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ResourceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments": {
            "get": {
                "description": "Retrieves a paginated list of experiments with support for filtering by status, date range, name, creator, and experiment group.",
                "operationId": "ListExperiment",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/ExperimentStatusType"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "experiment_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "experiment_ids",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "experiment_group_ids",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_on",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/ExperimentSortOn"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort order enumeration for list operations.",
                        "schema": {
                            "$ref": "#/components/schemas/SortBy"
                        }
                    },
                    {
                        "name": "global_experiments_only",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "dimension_match_strategy",
                        "in": "query",
                        "description": "Strategy to follow while filter items based on the context",
                        "schema": {
                            "$ref": "#/components/schemas/DimensionMatchStrategy"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new experiment with variants, context and conditions. You can optionally specify metrics and experiment group for tracking and analysis.",
                "operationId": "CreateExperiment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExperimentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/applicable-variants": {
            "post": {
                "description": "Determines which experiment variants are applicable to a given context, used for experiment evaluation and variant selection.",
                "operationId": "ApplicableVariants",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicableVariantsRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ApplicableVariants 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicableVariantsResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/{id}": {
            "get": {
                "description": "Retrieves detailed information about a specific experiment, including its config, variants, status, and metrics.",
                "operationId": "GetExperiment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/{id}/conclude": {
            "patch": {
                "description": "Concludes an inprogress experiment by selecting a winning variant and transitioning the experiment to a concluded state.",
                "operationId": "ConcludeExperiment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConcludeExperimentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConcludeExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConcludeExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/{id}/discard": {
            "patch": {
                "description": "Discards an experiment without selecting a winner, effectively canceling the experiment and removing its effects.",
                "operationId": "DiscardExperiment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscardExperimentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DiscardExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscardExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/{id}/overrides": {
            "put": {
                "description": "Updates the overrides for specific variants within an experiment, allowing modification of experiment behavior Updates the overrides for specific variants within an experiment, allowing modification of experiment behavior while it is in the created state.",
                "operationId": "UpdateOverridesExperiment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOverridesExperimentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateOverridesExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOverridesExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/{id}/pause": {
            "patch": {
                "description": "Temporarily pauses an inprogress experiment, suspending its effects while preserving the experiment config for later resumption.",
                "operationId": "PauseExperiment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PauseExperimentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PauseExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PauseExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/{id}/ramp": {
            "patch": {
                "description": "Adjusts the traffic percentage allocation for an in-progress experiment, allowing gradual rollout or rollback of experimental features.",
                "operationId": "RampExperiment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RampExperimentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RampExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RampExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/experiments/{id}/resume": {
            "patch": {
                "description": "Resumes a previously paused experiment, restoring its in-progress state and re-enabling variant evaluation.",
                "operationId": "ResumeExperiment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResumeExperimentRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ResumeExperiment 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResumeExperimentResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/function": {
            "get": {
                "description": "Retrieves a paginated list of all functions in the workspace with their basic information and current status.",
                "operationId": "ListFunction",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListFunction 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListFunctionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new custom function for validation or autocompletion with specified code, runtime version, and function type.",
                "operationId": "CreateFunction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFunctionRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateFunction 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFunctionResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/function/{function_name}": {
            "delete": {
                "description": "Permanently removes a function from the workspace, deleting both draft and published versions along with all associated code. It fails if already in use",
                "operationId": "DeleteFunction",
                "parameters": [
                    {
                        "name": "function_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DeleteFunction 200 response"
                    },
                    "404": {
                        "description": "FunctionNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Retrieves detailed information about a specific function including its published and draft versions, code, and metadata.",
                "operationId": "GetFunction",
                "parameters": [
                    {
                        "name": "function_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetFunction 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetFunctionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "FunctionNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the draft version of an existing function with new code, runtime version, or description while preserving the published version.",
                "operationId": "UpdateFunction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFunctionRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "function_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateFunction 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFunctionResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "FunctionNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/function/{function_name}/publish": {
            "patch": {
                "description": "Publishes the draft version of a function, making it the active version used for validation or autocompletion in the system.",
                "operationId": "Publish",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublishRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "function_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publish 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublishResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "FunctionNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/function/{function_name}/{stage}/test": {
            "post": {
                "description": "Executes a function in test mode with provided input parameters to validate its behavior before publishing or deployment.",
                "operationId": "Test",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FunctionExecutionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "function_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "schema": {
                            "$ref": "#/components/schemas/Stage"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "FunctionNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/superposition/organisations": {
            "get": {
                "description": "Retrieves a paginated list of all organisations with their basic information and status details.",
                "operationId": "ListOrganisation",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListOrganisation 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrganisationResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new organisation with specified details including name, admin contact, and organisational information.",
                "operationId": "CreateOrganisation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganisationRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "CreateOrganisation 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateOrganisationResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/superposition/organisations/{id}": {
            "get": {
                "description": "Retrieves detailed information about a specific organisation including its status, contact details, and administrative metadata.",
                "operationId": "GetOrganisation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetOrganisation 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOrganisationResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "OrganisationNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing organisation's information including contact details, status, and administrative properties.",
                "operationId": "UpdateOrganisation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrganisationRequestContent"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateOrganisation 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOrganisationResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "OrganisationNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/types": {
            "get": {
                "description": "Retrieves a paginated list of all type templates in the workspace, including their schemas and metadata for type management.",
                "operationId": "GetTypeTemplatesList",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetTypeTemplatesList 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTypeTemplatesListResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new type template with specified schema definition, providing reusable type definitions for config validation.",
                "operationId": "CreateTypeTemplates",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTypeTemplatesRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateTypeTemplates 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTypeTemplatesResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/types/{type_name}": {
            "delete": {
                "description": "Permanently removes a type template from the workspace. No checks performed while deleting",
                "operationId": "DeleteTypeTemplates",
                "parameters": [
                    {
                        "name": "type_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DeleteTypeTemplates 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteTypeTemplatesResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeTemplatesNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing type template's schema definition and metadata while preserving its identifier and usage history.",
                "operationId": "UpdateTypeTemplates",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTypeTemplatesRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "type_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateTypeTemplates 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTypeTemplatesResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeTemplatesNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhook": {
            "get": {
                "description": "Retrieves a paginated list of all webhook configs in the workspace, including their status and config details.",
                "operationId": "ListWebhook",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListWebhook 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWebhookResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new webhook config to receive HTTP notifications when specified events occur in the system.",
                "operationId": "CreateWebhook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWebhookRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateWebhook 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWebhookResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhook/{name}": {
            "get": {
                "description": "Retrieves detailed information about a specific webhook config, including its events, headers, and trigger history.",
                "operationId": "GetWebhook",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetWebhook 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWebhookResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an existing webhook config, allowing modification of URL, events, headers, and other webhook properties.",
                "operationId": "UpdateWebhook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWebhookRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    },
                    {
                        "name": "x-tenant",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateWebhook 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWebhookResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "WebhookNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "get": {
                "description": "Retrieves a paginated list of all workspaces with optional filtering by workspace name, including their status, config details, and administrative information.",
                "operationId": "ListWorkspace",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListWorkspace 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWorkspaceResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new workspace within an organisation, including database schema setup and isolated environment for config management with specified admin and settings.",
                "operationId": "CreateWorkspace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateWorkspace 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkspaceResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_name}": {
            "put": {
                "description": "Updates an existing workspace configuration, allowing modification of admin settings, mandatory dimensions, and workspace properties. Validates config version existence if provided.",
                "operationId": "UpdateWorkspace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceRequestContent"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "workspace_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateWorkspace 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWorkspaceResponseContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "WorkspaceNotFound 404 response"
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_name}/db/migrate": {
            "post": {
                "description": "Migrates the workspace database schema to the new version of the template",
                "operationId": "MigrateWorkspaceSchema",
                "parameters": [
                    {
                        "name": "workspace_name",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "x-org-id",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "default": "juspay"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MigrateWorkspaceSchema 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MigrateWorkspaceSchemaResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddMembersToGroupRequestContent": {
                "type": "object",
                "description": "Input structure for adding members to an experiment group.",
                "properties": {
                    "change_reason": {
                        "type": "string",
                        "description": "Reason for adding these members."
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of experiment IDs to add to this group."
                    }
                },
                "required": [
                    "change_reason",
                    "member_experiment_ids"
                ]
            },
            "AddMembersToGroupResponseContent": {
                "type": "object",
                "description": "Standard response structure for an experiment group.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context_hash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        }
                    },
                    "group_type": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "required": [
                    "buckets",
                    "change_reason",
                    "context",
                    "context_hash",
                    "created_at",
                    "created_by",
                    "description",
                    "group_type",
                    "id",
                    "last_modified_at",
                    "last_modified_by",
                    "member_experiment_ids",
                    "name",
                    "traffic_percentage"
                ]
            },
            "ApplicableVariantsRequestContent": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "identifier": {
                        "type": "string"
                    }
                },
                "required": [
                    "context",
                    "identifier"
                ]
            },
            "ApplicableVariantsResponseContent": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    }
                },
                "required": [
                    "data"
                ]
            },
            "AuditLogFull": {
                "type": "object",
                "properties": {
                    "table_name": {
                        "type": "string"
                    },
                    "user_name": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "action": {
                        "type": "string"
                    },
                    "original_data": {},
                    "new_data": {},
                    "query": {
                        "type": "string"
                    }
                }
            },
            "AutocompleteFunctionRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "environment": {}
                }
            },
            "Bucket": {
                "type": "object",
                "properties": {
                    "experiment_id": {
                        "type": "string"
                    },
                    "variant_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "experiment_id",
                    "variant_id"
                ]
            },
            "BulkOperationOut": {
                "type": "object",
                "properties": {
                    "output": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContextActionOut"
                        }
                    }
                }
            },
            "BulkOperationReq": {
                "type": "object",
                "properties": {
                    "operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContextAction"
                        }
                    }
                }
            },
            "ConcludeExperimentRequestContent": {
                "type": "object",
                "properties": {
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "chosen_variant"
                ]
            },
            "ConcludeExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "Condition": {
                "type": "object",
                "additionalProperties": {},
                "description": "Represents conditional criteria used for context matching. Keys define dimension names and values specify the criteria that must be met."
            },
            "ContextAction": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "PUT",
                        "properties": {
                            "PUT": {
                                "$ref": "#/components/schemas/ContextPut"
                            }
                        },
                        "required": [
                            "PUT"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "REPLACE",
                        "properties": {
                            "REPLACE": {
                                "$ref": "#/components/schemas/UpdateContextOverrideRequest"
                            }
                        },
                        "required": [
                            "REPLACE"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "DELETE",
                        "properties": {
                            "DELETE": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "DELETE"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "MOVE",
                        "properties": {
                            "MOVE": {
                                "$ref": "#/components/schemas/ContextMove"
                            }
                        },
                        "required": [
                            "MOVE"
                        ]
                    }
                ]
            },
            "ContextActionOut": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "PUT",
                        "properties": {
                            "PUT": {
                                "$ref": "#/components/schemas/ContextResponse"
                            }
                        },
                        "required": [
                            "PUT"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "REPLACE",
                        "properties": {
                            "REPLACE": {
                                "$ref": "#/components/schemas/ContextResponse"
                            }
                        },
                        "required": [
                            "REPLACE"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "DELETE",
                        "properties": {
                            "DELETE": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "DELETE"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "MOVE",
                        "properties": {
                            "MOVE": {
                                "$ref": "#/components/schemas/ContextResponse"
                            }
                        },
                        "required": [
                            "MOVE"
                        ]
                    }
                ]
            },
            "ContextFilterSortOn": {
                "type": "string",
                "enum": [
                    "last_modified_at",
                    "created_at",
                    "weight"
                ]
            },
            "ContextIdentifier": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "id",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "context",
                        "properties": {
                            "context": {
                                "$ref": "#/components/schemas/Condition"
                            }
                        },
                        "required": [
                            "context"
                        ]
                    }
                ]
            },
            "ContextMap": {
                "type": "object",
                "additionalProperties": {},
                "description": "Map representing the context.\nKeys correspond to the names of the dimensions."
            },
            "ContextMove": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context"
                ]
            },
            "ContextPartial": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "priority": {
                        "type": "number"
                    },
                    "weight": {
                        "type": "number"
                    },
                    "override_with_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 1
                    }
                }
            },
            "ContextPut": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "override"
                ]
            },
            "ContextResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "override_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "CreateContextRequestContent": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "override"
                ]
            },
            "CreateContextResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "override_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "CreateDefaultConfigRequestContent": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {},
                    "schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": "string",
                        "description": "Optional"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "key",
                    "schema",
                    "value"
                ]
            },
            "CreateDefaultConfigResponseContent": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {},
                    "schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": "string",
                        "description": "Optional"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "key",
                    "last_modified_at",
                    "last_modified_by",
                    "schema",
                    "value"
                ]
            },
            "CreateDimensionRequestContent": {
                "type": "object",
                "properties": {
                    "dimension": {
                        "type": "string"
                    },
                    "position": {
                        "type": "number"
                    },
                    "schema": {},
                    "function_name": {
                        "type": "string"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "dimension",
                    "position",
                    "schema"
                ]
            },
            "CreateDimensionResponseContent": {
                "type": "object",
                "properties": {
                    "dimension": {
                        "type": "string"
                    },
                    "position": {
                        "type": "number"
                    },
                    "schema": {},
                    "function_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependency_graph": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    },
                    "mandatory": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "dependencies",
                    "dependency_graph",
                    "dependents",
                    "description",
                    "dimension",
                    "last_modified_at",
                    "last_modified_by",
                    "position",
                    "schema"
                ]
            },
            "CreateExperimentGroupRequestContent": {
                "type": "object",
                "description": "Input structure for creating a new experiment group.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string",
                        "description": "Reason for creating this experiment group."
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of experiment IDs that are members of this group."
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "description",
                    "name",
                    "traffic_percentage"
                ]
            },
            "CreateExperimentGroupResponseContent": {
                "type": "object",
                "description": "Standard response structure for an experiment group.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context_hash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        }
                    },
                    "group_type": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "required": [
                    "buckets",
                    "change_reason",
                    "context",
                    "context_hash",
                    "created_at",
                    "created_by",
                    "description",
                    "group_type",
                    "id",
                    "last_modified_at",
                    "last_modified_by",
                    "member_experiment_ids",
                    "name",
                    "traffic_percentage"
                ]
            },
            "CreateExperimentRequestContent": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "description",
                    "name",
                    "variants"
                ]
            },
            "CreateExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "CreateFunctionRequestContent": {
                "type": "object",
                "properties": {
                    "function_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "function": {
                        "type": "string"
                    },
                    "runtime_version": {
                        "type": "string"
                    },
                    "function_type": {
                        "$ref": "#/components/schemas/FunctionTypes"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "function",
                    "function_name",
                    "function_type",
                    "runtime_version"
                ]
            },
            "CreateFunctionResponseContent": {
                "type": "object",
                "properties": {
                    "function_name": {
                        "type": "string"
                    },
                    "published_code": {
                        "type": "string"
                    },
                    "draft_code": {
                        "type": "string"
                    },
                    "published_runtime_version": {
                        "type": "string"
                    },
                    "draft_runtime_version": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "draft_edited_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "published_by": {
                        "type": "string"
                    },
                    "draft_edited_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "function_type": {
                        "$ref": "#/components/schemas/FunctionTypes"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "draft_code",
                    "draft_edited_at",
                    "draft_edited_by",
                    "draft_runtime_version",
                    "function_name",
                    "function_type",
                    "last_modified_at",
                    "last_modified_by"
                ]
            },
            "CreateOrganisationRequestContent": {
                "type": "object",
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "admin_email": {
                        "type": "string"
                    },
                    "sector": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin_email",
                    "name"
                ]
            },
            "CreateOrganisationResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "admin_email": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OrgStatus"
                    },
                    "sector": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin_email",
                    "created_at",
                    "created_by",
                    "id",
                    "name",
                    "status",
                    "updated_at",
                    "updated_by"
                ]
            },
            "CreateTypeTemplatesRequestContent": {
                "type": "object",
                "properties": {
                    "type_name": {
                        "type": "string"
                    },
                    "type_schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "type_name",
                    "type_schema"
                ]
            },
            "CreateTypeTemplatesResponseContent": {
                "type": "object",
                "properties": {
                    "type_name": {
                        "type": "string"
                    },
                    "type_schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "last_modified_at",
                    "last_modified_by",
                    "type_name",
                    "type_schema"
                ]
            },
            "CreateWebhookRequestContent": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/HttpMethod"
                    },
                    "version": {
                        "$ref": "#/components/schemas/Version"
                    },
                    "custom_headers": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "enabled",
                    "events",
                    "method",
                    "name",
                    "url"
                ]
            },
            "CreateWebhookResponseContent": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/HttpMethod"
                    },
                    "version": {
                        "$ref": "#/components/schemas/Version"
                    },
                    "custom_headers": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "max_retries": {
                        "type": "number"
                    },
                    "last_triggered_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "enabled",
                    "events",
                    "last_modified_at",
                    "last_modified_by",
                    "max_retries",
                    "method",
                    "name",
                    "url",
                    "version"
                ]
            },
            "CreateWorkspaceRequestContent": {
                "type": "object",
                "properties": {
                    "workspace_admin_email": {
                        "type": "string"
                    },
                    "workspace_name": {
                        "type": "string"
                    },
                    "workspace_status": {
                        "$ref": "#/components/schemas/WorkspaceStatus"
                    },
                    "strict_mode": {
                        "type": "boolean"
                    },
                    "metrics": {},
                    "allow_experiment_self_approval": {
                        "type": "boolean"
                    },
                    "auto_populate_control": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "allow_experiment_self_approval",
                    "auto_populate_control",
                    "strict_mode",
                    "workspace_admin_email",
                    "workspace_name"
                ]
            },
            "CreateWorkspaceResponseContent": {
                "type": "object",
                "properties": {
                    "workspace_name": {
                        "type": "string"
                    },
                    "organisation_id": {
                        "type": "string"
                    },
                    "organisation_name": {
                        "type": "string"
                    },
                    "workspace_schema_name": {
                        "type": "string"
                    },
                    "workspace_status": {
                        "$ref": "#/components/schemas/WorkspaceStatus"
                    },
                    "workspace_admin_email": {
                        "type": "string"
                    },
                    "config_version": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "mandatory_dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "strict_mode": {
                        "type": "boolean"
                    },
                    "metrics": {},
                    "allow_experiment_self_approval": {
                        "type": "boolean"
                    },
                    "auto_populate_control": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "allow_experiment_self_approval",
                    "auto_populate_control",
                    "created_at",
                    "created_by",
                    "last_modified_at",
                    "last_modified_by",
                    "organisation_id",
                    "organisation_name",
                    "strict_mode",
                    "workspace_admin_email",
                    "workspace_name",
                    "workspace_schema_name",
                    "workspace_status"
                ]
            },
            "DefaultConfigFull": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {},
                    "schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": "string",
                        "description": "Optional"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "key",
                    "last_modified_at",
                    "last_modified_by",
                    "schema",
                    "value"
                ]
            },
            "DeleteExperimentGroupResponseContent": {
                "type": "object",
                "description": "Standard response structure for an experiment group.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context_hash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        }
                    },
                    "group_type": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "required": [
                    "buckets",
                    "change_reason",
                    "context",
                    "context_hash",
                    "created_at",
                    "created_by",
                    "description",
                    "group_type",
                    "id",
                    "last_modified_at",
                    "last_modified_by",
                    "member_experiment_ids",
                    "name",
                    "traffic_percentage"
                ]
            },
            "DeleteTypeTemplatesResponseContent": {
                "type": "object",
                "properties": {
                    "type_name": {
                        "type": "string"
                    },
                    "type_schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "last_modified_at",
                    "last_modified_by",
                    "type_name",
                    "type_schema"
                ]
            },
            "DimensionExt": {
                "type": "object",
                "properties": {
                    "dimension": {
                        "type": "string"
                    },
                    "position": {
                        "type": "number"
                    },
                    "schema": {},
                    "function_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependency_graph": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    },
                    "mandatory": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "dependencies",
                    "dependency_graph",
                    "dependents",
                    "description",
                    "dimension",
                    "last_modified_at",
                    "last_modified_by",
                    "position",
                    "schema"
                ]
            },
            "DimensionMatchStrategy": {
                "type": "string",
                "description": "Strategy to follow while filter items based on the context",
                "enum": [
                    "exact",
                    "subset"
                ]
            },
            "DiscardExperimentRequestContent": {
                "type": "object",
                "properties": {
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason"
                ]
            },
            "DiscardExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "ExperimentGroupResponse": {
                "type": "object",
                "description": "Standard response structure for an experiment group.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context_hash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        }
                    },
                    "group_type": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "required": [
                    "buckets",
                    "change_reason",
                    "context",
                    "context_hash",
                    "created_at",
                    "created_by",
                    "description",
                    "group_type",
                    "id",
                    "last_modified_at",
                    "last_modified_by",
                    "member_experiment_ids",
                    "name",
                    "traffic_percentage"
                ]
            },
            "ExperimentGroupSortOn": {
                "type": "string",
                "enum": [
                    "name",
                    "created_at",
                    "last_modified_at"
                ]
            },
            "ExperimentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "ExperimentSortOn": {
                "type": "string",
                "enum": [
                    "last_modified_at",
                    "created_at"
                ]
            },
            "ExperimentStatusType": {
                "type": "string",
                "enum": [
                    "CREATED",
                    "CONCLUDED",
                    "INPROGRESS",
                    "DISCARDED",
                    "PAUSED"
                ]
            },
            "ExperimentType": {
                "type": "string",
                "enum": [
                    "DEFAULT",
                    "DELETE_OVERRIDES"
                ]
            },
            "FunctionExecutionRequest": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "ValidateFunctionRequest",
                        "properties": {
                            "ValidateFunctionRequest": {
                                "$ref": "#/components/schemas/ValidateFunctionRequest"
                            }
                        },
                        "required": [
                            "ValidateFunctionRequest"
                        ]
                    },
                    {
                        "type": "object",
                        "title": "AutocompleteFunctionRequest",
                        "properties": {
                            "AutocompleteFunctionRequest": {
                                "$ref": "#/components/schemas/AutocompleteFunctionRequest"
                            }
                        },
                        "required": [
                            "AutocompleteFunctionRequest"
                        ]
                    }
                ]
            },
            "FunctionResponse": {
                "type": "object",
                "properties": {
                    "function_name": {
                        "type": "string"
                    },
                    "published_code": {
                        "type": "string"
                    },
                    "draft_code": {
                        "type": "string"
                    },
                    "published_runtime_version": {
                        "type": "string"
                    },
                    "draft_runtime_version": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "draft_edited_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "published_by": {
                        "type": "string"
                    },
                    "draft_edited_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "function_type": {
                        "$ref": "#/components/schemas/FunctionTypes"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "draft_code",
                    "draft_edited_at",
                    "draft_edited_by",
                    "draft_runtime_version",
                    "function_name",
                    "function_type",
                    "last_modified_at",
                    "last_modified_by"
                ]
            },
            "FunctionTypes": {
                "type": "string",
                "enum": [
                    "VALIDATION",
                    "AUTOCOMPLETE"
                ]
            },
            "GetConfigFastOutputPayload": {},
            "GetConfigRequestContent": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/ContextMap"
                    }
                }
            },
            "GetConfigResponseContent": {
                "type": "object",
                "properties": {
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContextPartial"
                        }
                    },
                    "overrides": {
                        "$ref": "#/components/schemas/OverridesMap"
                    },
                    "default_configs": {
                        "$ref": "#/components/schemas/Object"
                    }
                }
            },
            "GetContextFromConditionInputPayload": {},
            "GetContextFromConditionResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "override_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "GetContextResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "override_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "GetDimensionResponseContent": {
                "type": "object",
                "properties": {
                    "dimension": {
                        "type": "string"
                    },
                    "position": {
                        "type": "number"
                    },
                    "schema": {},
                    "function_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependency_graph": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    },
                    "mandatory": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "dependencies",
                    "dependency_graph",
                    "dependents",
                    "description",
                    "dimension",
                    "last_modified_at",
                    "last_modified_by",
                    "position",
                    "schema"
                ]
            },
            "GetExperimentGroupResponseContent": {
                "type": "object",
                "description": "Standard response structure for an experiment group.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context_hash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        }
                    },
                    "group_type": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "required": [
                    "buckets",
                    "change_reason",
                    "context",
                    "context_hash",
                    "created_at",
                    "created_by",
                    "description",
                    "group_type",
                    "id",
                    "last_modified_at",
                    "last_modified_by",
                    "member_experiment_ids",
                    "name",
                    "traffic_percentage"
                ]
            },
            "GetExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "GetFunctionResponseContent": {
                "type": "object",
                "properties": {
                    "function_name": {
                        "type": "string"
                    },
                    "published_code": {
                        "type": "string"
                    },
                    "draft_code": {
                        "type": "string"
                    },
                    "published_runtime_version": {
                        "type": "string"
                    },
                    "draft_runtime_version": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "draft_edited_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "published_by": {
                        "type": "string"
                    },
                    "draft_edited_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "function_type": {
                        "$ref": "#/components/schemas/FunctionTypes"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "draft_code",
                    "draft_edited_at",
                    "draft_edited_by",
                    "draft_runtime_version",
                    "function_name",
                    "function_type",
                    "last_modified_at",
                    "last_modified_by"
                ]
            },
            "GetOrganisationResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "admin_email": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OrgStatus"
                    },
                    "sector": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin_email",
                    "created_at",
                    "created_by",
                    "id",
                    "name",
                    "status",
                    "updated_at",
                    "updated_by"
                ]
            },
            "GetResolvedConfigOutputPayload": {},
            "GetResolvedConfigRequestContent": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/ContextMap"
                    }
                }
            },
            "GetTypeTemplatesListResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TypeTemplatesResponse"
                        }
                    }
                }
            },
            "GetWebhookResponseContent": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/HttpMethod"
                    },
                    "version": {
                        "$ref": "#/components/schemas/Version"
                    },
                    "custom_headers": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "max_retries": {
                        "type": "number"
                    },
                    "last_triggered_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "enabled",
                    "events",
                    "last_modified_at",
                    "last_modified_by",
                    "max_retries",
                    "method",
                    "name",
                    "url",
                    "version"
                ]
            },
            "GroupType": {
                "type": "string",
                "enum": [
                    "USER_CREATED",
                    "SYSTEM_GENERATED"
                ]
            },
            "HttpMethod": {
                "type": "string",
                "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "PATCH",
                    "DELETE",
                    "HEAD"
                ]
            },
            "InternalServerErrorResponseContent": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ListAuditLogsResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogFull"
                        }
                    }
                }
            },
            "ListContextsResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContextResponse"
                        }
                    }
                }
            },
            "ListDefaultConfigsResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DefaultConfigFull"
                        }
                    }
                }
            },
            "ListDimensionsResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DimensionExt"
                        }
                    }
                }
            },
            "ListExperimentGroupsResponseContent": {
                "type": "object",
                "description": "Output structure for the list experiment groups operation, including pagination details.",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExperimentGroupResponse"
                        },
                        "description": "A list of experiment group responses."
                    }
                },
                "required": [
                    "data",
                    "total_items",
                    "total_pages"
                ]
            },
            "ListExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExperimentResponse"
                        }
                    }
                },
                "required": [
                    "data",
                    "total_items",
                    "total_pages"
                ]
            },
            "ListFunctionResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FunctionResponse"
                        }
                    }
                }
            },
            "ListOrganisationResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganisationResponse"
                        }
                    }
                }
            },
            "ListVersionsMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "config": {},
                    "config_hash": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "config",
                    "config_hash",
                    "created_at",
                    "description",
                    "id"
                ]
            },
            "ListVersionsResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListVersionsMember"
                        }
                    }
                },
                "required": [
                    "data",
                    "total_items",
                    "total_pages"
                ]
            },
            "ListWebhookResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookResponse"
                        }
                    }
                },
                "required": [
                    "data",
                    "total_items",
                    "total_pages"
                ]
            },
            "ListWorkspaceResponseContent": {
                "type": "object",
                "properties": {
                    "total_pages": {
                        "type": "number"
                    },
                    "total_items": {
                        "type": "number"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceResponse"
                        }
                    }
                },
                "required": [
                    "data",
                    "total_items",
                    "total_pages"
                ]
            },
            "MergeStrategy": {
                "type": "string",
                "enum": [
                    "MERGE",
                    "REPLACE"
                ]
            },
            "MigrateWorkspaceSchemaResponseContent": {
                "type": "object",
                "properties": {
                    "workspace_name": {
                        "type": "string"
                    },
                    "organisation_id": {
                        "type": "string"
                    },
                    "organisation_name": {
                        "type": "string"
                    },
                    "workspace_schema_name": {
                        "type": "string"
                    },
                    "workspace_status": {
                        "$ref": "#/components/schemas/WorkspaceStatus"
                    },
                    "workspace_admin_email": {
                        "type": "string"
                    },
                    "config_version": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "mandatory_dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "strict_mode": {
                        "type": "boolean"
                    },
                    "metrics": {},
                    "allow_experiment_self_approval": {
                        "type": "boolean"
                    },
                    "auto_populate_control": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "allow_experiment_self_approval",
                    "auto_populate_control",
                    "created_at",
                    "created_by",
                    "last_modified_at",
                    "last_modified_by",
                    "organisation_id",
                    "organisation_name",
                    "strict_mode",
                    "workspace_admin_email",
                    "workspace_name",
                    "workspace_schema_name",
                    "workspace_status"
                ]
            },
            "MoveContextRequestContent": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context"
                ]
            },
            "MoveContextResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "override_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "Object": {
                "type": "object",
                "additionalProperties": {},
                "description": "Generic key-value object structure used for flexible data representation throughout the API."
            },
            "OrgStatus": {
                "type": "string",
                "enum": [
                    "Active",
                    "Inactive",
                    "PendingKyb"
                ]
            },
            "OrganisationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "admin_email": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OrgStatus"
                    },
                    "sector": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin_email",
                    "created_at",
                    "created_by",
                    "id",
                    "name",
                    "status",
                    "updated_at",
                    "updated_by"
                ]
            },
            "Overrides": {
                "type": "object",
                "additionalProperties": {},
                "description": "Configuration overrides that replace default values when context conditions are met. Keys represent configuration keys and values are the override data."
            },
            "OverridesMap": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/Overrides"
                }
            },
            "PauseExperimentRequestContent": {
                "type": "object",
                "properties": {
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason"
                ]
            },
            "PauseExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "PublishRequestContent": {
                "type": "object",
                "properties": {
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason"
                ]
            },
            "PublishResponseContent": {
                "type": "object",
                "properties": {
                    "function_name": {
                        "type": "string"
                    },
                    "published_code": {
                        "type": "string"
                    },
                    "draft_code": {
                        "type": "string"
                    },
                    "published_runtime_version": {
                        "type": "string"
                    },
                    "draft_runtime_version": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "draft_edited_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "published_by": {
                        "type": "string"
                    },
                    "draft_edited_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "function_type": {
                        "$ref": "#/components/schemas/FunctionTypes"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "draft_code",
                    "draft_edited_at",
                    "draft_edited_by",
                    "draft_runtime_version",
                    "function_name",
                    "function_type",
                    "last_modified_at",
                    "last_modified_by"
                ]
            },
            "RampExperimentRequestContent": {
                "type": "object",
                "properties": {
                    "change_reason": {
                        "type": "string"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    }
                },
                "required": [
                    "change_reason",
                    "traffic_percentage"
                ]
            },
            "RampExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "RemoveMembersFromGroupRequestContent": {
                "type": "object",
                "description": "Input structure for adding members to an experiment group.",
                "properties": {
                    "change_reason": {
                        "type": "string",
                        "description": "Reason for adding these members."
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of experiment IDs to add to this group."
                    }
                },
                "required": [
                    "change_reason",
                    "member_experiment_ids"
                ]
            },
            "RemoveMembersFromGroupResponseContent": {
                "type": "object",
                "description": "Standard response structure for an experiment group.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context_hash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        }
                    },
                    "group_type": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "required": [
                    "buckets",
                    "change_reason",
                    "context",
                    "context_hash",
                    "created_at",
                    "created_by",
                    "description",
                    "group_type",
                    "id",
                    "last_modified_at",
                    "last_modified_by",
                    "member_experiment_ids",
                    "name",
                    "traffic_percentage"
                ]
            },
            "ResumeExperimentRequestContent": {
                "type": "object",
                "properties": {
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason"
                ]
            },
            "ResumeExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "SortBy": {
                "type": "string",
                "description": "Sort order enumeration for list operations.",
                "enum": [
                    "desc",
                    "asc"
                ]
            },
            "Stage": {
                "type": "string",
                "enum": [
                    "draft",
                    "published"
                ]
            },
            "TestResponseContent": {
                "type": "object",
                "properties": {
                    "fn_output": {},
                    "stdout": {
                        "type": "string"
                    },
                    "function_type": {
                        "$ref": "#/components/schemas/FunctionTypes"
                    }
                },
                "required": [
                    "fn_output",
                    "function_type",
                    "stdout"
                ]
            },
            "TypeTemplatesResponse": {
                "type": "object",
                "properties": {
                    "type_name": {
                        "type": "string"
                    },
                    "type_schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "last_modified_at",
                    "last_modified_by",
                    "type_name",
                    "type_schema"
                ]
            },
            "UpdateContextOverrideRequest": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/ContextIdentifier"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "override"
                ]
            },
            "UpdateDefaultConfigRequestContent": {
                "type": "object",
                "properties": {
                    "change_reason": {
                        "type": "string"
                    },
                    "value": {},
                    "schema": {},
                    "function_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason"
                ]
            },
            "UpdateDefaultConfigResponseContent": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {},
                    "schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "function_name": {
                        "type": "string",
                        "description": "Optional"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "key",
                    "last_modified_at",
                    "last_modified_by",
                    "schema",
                    "value"
                ]
            },
            "UpdateDimensionRequestContent": {
                "type": "object",
                "properties": {
                    "schema": {},
                    "position": {
                        "type": "number"
                    },
                    "function_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason"
                ]
            },
            "UpdateDimensionResponseContent": {
                "type": "object",
                "properties": {
                    "dimension": {
                        "type": "string"
                    },
                    "position": {
                        "type": "number"
                    },
                    "schema": {},
                    "function_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependency_graph": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "autocomplete_function_name": {
                        "type": "string"
                    },
                    "mandatory": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "dependencies",
                    "dependency_graph",
                    "dependents",
                    "description",
                    "dimension",
                    "last_modified_at",
                    "last_modified_by",
                    "position",
                    "schema"
                ]
            },
            "UpdateExperimentGroupRequestContent": {
                "type": "object",
                "description": "Input structure for updating an existing experiment group.",
                "properties": {
                    "change_reason": {
                        "type": "string",
                        "description": "Reason for this update."
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional new description for the group."
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0,
                        "description": "Optional new traffic percentage for the group."
                    }
                },
                "required": [
                    "change_reason"
                ]
            },
            "UpdateExperimentGroupResponseContent": {
                "type": "object",
                "description": "Standard response structure for an experiment group.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "context_hash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "traffic_percentage": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "member_experiment_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        }
                    },
                    "group_type": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "required": [
                    "buckets",
                    "change_reason",
                    "context",
                    "context_hash",
                    "created_at",
                    "created_by",
                    "description",
                    "group_type",
                    "id",
                    "last_modified_at",
                    "last_modified_by",
                    "member_experiment_ids",
                    "name",
                    "traffic_percentage"
                ]
            },
            "UpdateFunctionRequestContent": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "function": {
                        "type": "string"
                    },
                    "runtime_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "function",
                    "runtime_version"
                ]
            },
            "UpdateFunctionResponseContent": {
                "type": "object",
                "properties": {
                    "function_name": {
                        "type": "string"
                    },
                    "published_code": {
                        "type": "string"
                    },
                    "draft_code": {
                        "type": "string"
                    },
                    "published_runtime_version": {
                        "type": "string"
                    },
                    "draft_runtime_version": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "draft_edited_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "published_by": {
                        "type": "string"
                    },
                    "draft_edited_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "function_type": {
                        "$ref": "#/components/schemas/FunctionTypes"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "draft_code",
                    "draft_edited_at",
                    "draft_edited_by",
                    "draft_runtime_version",
                    "function_name",
                    "function_type",
                    "last_modified_at",
                    "last_modified_by"
                ]
            },
            "UpdateOrganisationRequestContent": {
                "type": "object",
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "admin_email": {
                        "type": "string"
                    },
                    "sector": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OrgStatus"
                    }
                }
            },
            "UpdateOrganisationResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "admin_email": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OrgStatus"
                    },
                    "sector": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "admin_email",
                    "created_at",
                    "created_by",
                    "id",
                    "name",
                    "status",
                    "updated_at",
                    "updated_by"
                ]
            },
            "UpdateOverrideResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "override": {
                        "$ref": "#/components/schemas/Overrides"
                    },
                    "override_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "UpdateOverridesExperimentRequestContent": {
                "type": "object",
                "properties": {
                    "variant_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VariantUpdateRequest"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "variant_list"
                ]
            },
            "UpdateOverridesExperimentResponseContent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "experiment_type": {
                        "$ref": "#/components/schemas/ExperimentType"
                    },
                    "override_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ExperimentStatusType"
                    },
                    "traffic_percentage": {
                        "type": "number"
                    },
                    "context": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variant"
                        }
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "chosen_variant": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_by": {
                        "type": "string"
                    },
                    "metrics_url": {
                        "type": "string"
                    },
                    "metrics": {},
                    "experiment_group_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "context",
                    "created_at",
                    "created_by",
                    "description",
                    "experiment_type",
                    "id",
                    "last_modified",
                    "last_modified_by",
                    "name",
                    "override_keys",
                    "status",
                    "traffic_percentage",
                    "variants"
                ]
            },
            "UpdateTypeTemplatesRequestContent": {
                "type": "object",
                "properties": {
                    "type_schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "type_schema"
                ]
            },
            "UpdateTypeTemplatesResponseContent": {
                "type": "object",
                "properties": {
                    "type_name": {
                        "type": "string"
                    },
                    "type_schema": {},
                    "description": {
                        "type": "string"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "last_modified_at",
                    "last_modified_by",
                    "type_name",
                    "type_schema"
                ]
            },
            "UpdateWebhookRequestContent": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/HttpMethod"
                    },
                    "version": {
                        "$ref": "#/components/schemas/Version"
                    },
                    "custom_headers": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "change_reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "change_reason",
                    "description",
                    "enabled",
                    "events",
                    "method",
                    "url"
                ]
            },
            "UpdateWebhookResponseContent": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/HttpMethod"
                    },
                    "version": {
                        "$ref": "#/components/schemas/Version"
                    },
                    "custom_headers": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "max_retries": {
                        "type": "number"
                    },
                    "last_triggered_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "enabled",
                    "events",
                    "last_modified_at",
                    "last_modified_by",
                    "max_retries",
                    "method",
                    "name",
                    "url",
                    "version"
                ]
            },
            "UpdateWorkspaceRequestContent": {
                "type": "object",
                "properties": {
                    "workspace_admin_email": {
                        "type": "string"
                    },
                    "config_version": {
                        "type": "string"
                    },
                    "mandatory_dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "workspace_status": {
                        "$ref": "#/components/schemas/WorkspaceStatus"
                    },
                    "metrics": {},
                    "allow_experiment_self_approval": {
                        "type": "boolean"
                    },
                    "auto_populate_control": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "workspace_admin_email"
                ]
            },
            "UpdateWorkspaceResponseContent": {
                "type": "object",
                "properties": {
                    "workspace_name": {
                        "type": "string"
                    },
                    "organisation_id": {
                        "type": "string"
                    },
                    "organisation_name": {
                        "type": "string"
                    },
                    "workspace_schema_name": {
                        "type": "string"
                    },
                    "workspace_status": {
                        "$ref": "#/components/schemas/WorkspaceStatus"
                    },
                    "workspace_admin_email": {
                        "type": "string"
                    },
                    "config_version": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "mandatory_dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "strict_mode": {
                        "type": "boolean"
                    },
                    "metrics": {},
                    "allow_experiment_self_approval": {
                        "type": "boolean"
                    },
                    "auto_populate_control": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "allow_experiment_self_approval",
                    "auto_populate_control",
                    "created_at",
                    "created_by",
                    "last_modified_at",
                    "last_modified_by",
                    "organisation_id",
                    "organisation_name",
                    "strict_mode",
                    "workspace_admin_email",
                    "workspace_name",
                    "workspace_schema_name",
                    "workspace_status"
                ]
            },
            "ValidateFunctionRequest": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {}
                }
            },
            "Variant": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "variant_type": {
                        "$ref": "#/components/schemas/VariantType"
                    },
                    "context_id": {
                        "type": "string"
                    },
                    "override_id": {
                        "type": "string"
                    },
                    "overrides": {}
                },
                "required": [
                    "id",
                    "overrides",
                    "variant_type"
                ]
            },
            "VariantType": {
                "type": "string",
                "enum": [
                    "CONTROL",
                    "EXPERIMENTAL"
                ]
            },
            "VariantUpdateRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "overrides": {}
                },
                "required": [
                    "id",
                    "overrides"
                ]
            },
            "Version": {
                "type": "string",
                "enum": [
                    "V1"
                ]
            },
            "WebhookResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/HttpMethod"
                    },
                    "version": {
                        "$ref": "#/components/schemas/Version"
                    },
                    "custom_headers": {
                        "$ref": "#/components/schemas/Object"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "max_retries": {
                        "type": "number"
                    },
                    "last_triggered_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "change_reason": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "change_reason",
                    "created_at",
                    "created_by",
                    "description",
                    "enabled",
                    "events",
                    "last_modified_at",
                    "last_modified_by",
                    "max_retries",
                    "method",
                    "name",
                    "url",
                    "version"
                ]
            },
            "WeightRecomputeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "old_weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    },
                    "new_weight": {
                        "type": "string",
                        "description": "Priority weight used to determine the order of context evaluation. Higher weights take precedence during configuration resolution."
                    }
                }
            },
            "WeightRecomputeResponseContent": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeightRecomputeResponse"
                        }
                    }
                }
            },
            "WorkspaceResponse": {
                "type": "object",
                "properties": {
                    "workspace_name": {
                        "type": "string"
                    },
                    "organisation_id": {
                        "type": "string"
                    },
                    "organisation_name": {
                        "type": "string"
                    },
                    "workspace_schema_name": {
                        "type": "string"
                    },
                    "workspace_status": {
                        "$ref": "#/components/schemas/WorkspaceStatus"
                    },
                    "workspace_admin_email": {
                        "type": "string"
                    },
                    "config_version": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "last_modified_by": {
                        "type": "string"
                    },
                    "last_modified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "mandatory_dimensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "strict_mode": {
                        "type": "boolean"
                    },
                    "metrics": {},
                    "allow_experiment_self_approval": {
                        "type": "boolean"
                    },
                    "auto_populate_control": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "allow_experiment_self_approval",
                    "auto_populate_control",
                    "created_at",
                    "created_by",
                    "last_modified_at",
                    "last_modified_by",
                    "organisation_id",
                    "organisation_name",
                    "strict_mode",
                    "workspace_admin_email",
                    "workspace_name",
                    "workspace_schema_name",
                    "workspace_status"
                ]
            },
            "WorkspaceStatus": {
                "type": "string",
                "enum": [
                    "ENABLED",
                    "DISABLED"
                ]
            }
        },
        "securitySchemes": {
            "smithy.api.httpBearerAuth": {
                "type": "http",
                "description": "HTTP Bearer authentication",
                "scheme": "Bearer"
            }
        }
    },
    "security": [
        {
            "smithy.api.httpBearerAuth": []
        }
    ]
}
